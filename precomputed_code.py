tcl_initialization2x2 = '''init(tcl[0]) := 0;
        init(tcl[1]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 4;
            from = 2 & to = 1 : 4;
            from = 2 & to = 3 : 4;
            from = 0 & to = 2 : 1;
            from = 0 & to = 3 : 1;
            from = 0 & to = 1 : 1;
            from = 1 & to = 3 : 2;
            from = 1 & to = 0 : 2;
            from = 1 & to = 2 : 2;
            from = 3 & to = 1 : 3;
            from = 3 & to = 2 : 3;
            from = 3 & to = 0 : 3;
        esac;
        init(tcl[2]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 2;
            from = 2 & to = 1 : 5;
            from = 2 & to = 3 : 2;
            from = 0 & to = 2 : 3;
            from = 0 & to = 3 : 5;
            from = 0 & to = 1 : 3;
            from = 1 & to = 3 : 1;
            from = 1 & to = 0 : 5;
            from = 1 & to = 2 : 1;
            from = 3 & to = 1 : 4;
            from = 3 & to = 2 : 5;
            from = 3 & to = 0 : 4;
        esac;
        init(tcl[3]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 5;
            from = 2 & to = 1 : 5;
            from = 2 & to = 3 : 1;
            from = 0 & to = 2 : 5;
            from = 0 & to = 3 : 5;
            from = 0 & to = 1 : 4;
            from = 1 & to = 3 : 5;
            from = 1 & to = 0 : 5;
            from = 1 & to = 2 : 3;
            from = 3 & to = 1 : 5;
            from = 3 & to = 2 : 5;
            from = 3 & to = 0 : 2;
        esac;
        init(tcl[4]) := 5;
    '''


tcl_initialization4x4 = '''
        init(tcl[0]) := 0;
        init(tcl[1]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 16;
            from = 2 & to = 1 : 16;
            from = 2 & to = 3 : 15;
            from = 0 & to = 2 : 1;
            from = 0 & to = 3 : 1;
            from = 0 & to = 1 : 2;
            from = 1 & to = 3 : 4;
            from = 1 & to = 0 : 4;
            from = 1 & to = 2 : 8;
            from = 3 & to = 1 : 13;
            from = 3 & to = 2 : 13;
            from = 3 & to = 0 : 9;
        esac;
        init(tcl[2]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 12;
            from = 2 & to = 1 : 17;
            from = 2 & to = 3 : 11;
            from = 0 & to = 2 : 5;
            from = 0 & to = 3 : 17;
            from = 0 & to = 1 : 6;
            from = 1 & to = 3 : 3;
            from = 1 & to = 0 : 17;
            from = 1 & to = 2 : 7;
            from = 3 & to = 1 : 14;
            from = 3 & to = 2 : 0;
            from = 3 & to = 0 : 19;
        esac;
        init(tcl[3]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 8;
            from = 2 & to = 1 : 17;
            from = 2 & to = 3 : 7;
            from = 0 & to = 2 : 9;
            from = 0 & to = 3 : 17;
            from = 0 & to = 1 : 10;
            from = 1 & to = 3 : 2;
            from = 1 & to = 0 : 17;
            from = 1 & to = 2 : 6;
            from = 3 & to = 1 : 15;
            from = 3 & to = 2 : 0;
            from = 3 & to = 0 : 11;
        esac;
        init(tcl[4]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 4;
            from = 2 & to = 1 : 17;
            from = 2 & to = 3 : 6;
            from = 0 & to = 2 : 13;
            from = 0 & to = 3 : 17;
            from = 0 & to = 1 : 11;
            from = 1 & to = 3 : 1;
            from = 1 & to = 0 : 17;
            from = 1 & to = 2 : 10;
            from = 3 & to = 1 : 16;
            from = 3 & to = 2 : 0;
            from = 3 & to = 0 : 7;
        esac;
        init(tcl[5]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 17;
            from = 2 & to = 1 : 17;
            from = 2 & to = 3 : 5;
            from = 0 & to = 2 : 17;
            from = 0 & to = 3 : 17;
            from = 0 & to = 1 : 12;
            from = 1 & to = 3 : 17;
            from = 1 & to = 0 : 17;
            from = 1 & to = 2 : 14;
            from = 3 & to = 1 : 17;
            from = 3 & to = 2 : 0;
            from = 3 & to = 0 : 3;
        esac;
        init(tcl[6]) := 17;
        '''


conflict_init = '''
        init(conflict[3][3][3][3]) := 1;
        init(conflict[3][3][1][1]) := 1;
        init(conflict[3][3][2][2]) := 1;
        init(conflict[3][3][4][4]) := 1;
        init(conflict[3][3][3][1]) := 0;
        init(conflict[3][3][3][2]) := 0;
        init(conflict[3][3][3][4]) := 0;
        init(conflict[3][3][1][3]) := 0;
        init(conflict[3][3][1][4]) := 0;
        init(conflict[3][3][1][2]) := 0;
        init(conflict[3][3][2][4]) := 0;
        init(conflict[3][3][2][1]) := 0;
        init(conflict[3][3][2][3]) := 0;
        init(conflict[3][3][4][2]) := 0;
        init(conflict[3][3][4][3]) := 0;
        init(conflict[3][3][4][1]) := 0;
        init(conflict[1][1][3][3]) := 1;
        init(conflict[1][1][1][1]) := 1;
        init(conflict[1][1][2][2]) := 1;
        init(conflict[1][1][4][4]) := 1;
        init(conflict[1][1][3][1]) := 0;
        init(conflict[1][1][3][2]) := 0;
        init(conflict[1][1][3][4]) := 0;
        init(conflict[1][1][1][3]) := 0;
        init(conflict[1][1][1][4]) := 0;
        init(conflict[1][1][1][2]) := 0;
        init(conflict[1][1][2][4]) := 0;
        init(conflict[1][1][2][1]) := 0;
        init(conflict[1][1][2][3]) := 0;
        init(conflict[1][1][4][2]) := 0;
        init(conflict[1][1][4][3]) := 0;
        init(conflict[1][1][4][1]) := 0;
        init(conflict[2][2][3][3]) := 1;
        init(conflict[2][2][1][1]) := 1;
        init(conflict[2][2][2][2]) := 1;
        init(conflict[2][2][4][4]) := 1;
        init(conflict[2][2][3][1]) := 0;
        init(conflict[2][2][3][2]) := 0;
        init(conflict[2][2][3][4]) := 0;
        init(conflict[2][2][1][3]) := 0;
        init(conflict[2][2][1][4]) := 0;
        init(conflict[2][2][1][2]) := 0;
        init(conflict[2][2][2][4]) := 0;
        init(conflict[2][2][2][1]) := 0;
        init(conflict[2][2][2][3]) := 0;
        init(conflict[2][2][4][2]) := 0;
        init(conflict[2][2][4][3]) := 0;
        init(conflict[2][2][4][1]) := 0;
        init(conflict[4][4][3][3]) := 1;
        init(conflict[4][4][1][1]) := 1;
        init(conflict[4][4][2][2]) := 1;
        init(conflict[4][4][4][4]) := 1;
        init(conflict[4][4][3][1]) := 0;
        init(conflict[4][4][3][2]) := 0;
        init(conflict[4][4][3][4]) := 0;
        init(conflict[4][4][1][3]) := 0;
        init(conflict[4][4][1][4]) := 0;
        init(conflict[4][4][1][2]) := 0;
        init(conflict[4][4][2][4]) := 0;
        init(conflict[4][4][2][1]) := 0;
        init(conflict[4][4][2][3]) := 0;
        init(conflict[4][4][4][2]) := 0;
        init(conflict[4][4][4][3]) := 0;
        init(conflict[4][4][4][1]) := 0;
        init(conflict[3][1][3][3]) := 0;
        init(conflict[3][1][1][1]) := 0;
        init(conflict[3][1][2][2]) := 0;
        init(conflict[3][1][4][4]) := 0;
        init(conflict[3][1][3][1]) := 1;
        init(conflict[3][1][3][2]) := 1;
        init(conflict[3][1][3][4]) := 1;
        init(conflict[3][1][1][3]) := 0;
        init(conflict[3][1][1][4]) := 0;
        init(conflict[3][1][1][2]) := 1;
        init(conflict[3][1][2][4]) := 2;
        init(conflict[3][1][2][1]) := 2;
        init(conflict[3][1][2][3]) := 2;
        init(conflict[3][1][4][2]) := 1;
        init(conflict[3][1][4][3]) := 0;
        init(conflict[3][1][4][1]) := 1;
        init(conflict[3][2][3][3]) := 0;
        init(conflict[3][2][1][1]) := 0;
        init(conflict[3][2][2][2]) := 0;
        init(conflict[3][2][4][4]) := 0;
        init(conflict[3][2][3][1]) := 1;
        init(conflict[3][2][3][2]) := 1;
        init(conflict[3][2][3][4]) := 1;
        init(conflict[3][2][1][3]) := 0;
        init(conflict[3][2][1][4]) := 0;
        init(conflict[3][2][1][2]) := 1;
        init(conflict[3][2][2][4]) := 0;
        init(conflict[3][2][2][1]) := 0;
        init(conflict[3][2][2][3]) := 0;
        init(conflict[3][2][4][2]) := 1;
        init(conflict[3][2][4][3]) := 0;
        init(conflict[3][2][4][1]) := 1;
        init(conflict[3][4][3][3]) := 0;
        init(conflict[3][4][1][1]) := 0;
        init(conflict[3][4][2][2]) := 0;
        init(conflict[3][4][4][4]) := 0;
        init(conflict[3][4][3][1]) := 1;
        init(conflict[3][4][3][2]) := 1;
        init(conflict[3][4][3][4]) := 1;
        init(conflict[3][4][1][3]) := 3;
        init(conflict[3][4][1][4]) := 3;
        init(conflict[3][4][1][2]) := 1;
        init(conflict[3][4][2][4]) := 2;
        init(conflict[3][4][2][1]) := 2;
        init(conflict[3][4][2][3]) := 2;
        init(conflict[3][4][4][2]) := 1;
        init(conflict[3][4][4][3]) := 0;
        init(conflict[3][4][4][1]) := 1;
        init(conflict[1][3][3][3]) := 0;
        init(conflict[1][3][1][1]) := 0;
        init(conflict[1][3][2][2]) := 0;
        init(conflict[1][3][4][4]) := 0;
        init(conflict[1][3][3][1]) := 0;
        init(conflict[1][3][3][2]) := 0;
        init(conflict[1][3][3][4]) := 1;
        init(conflict[1][3][1][3]) := 1;
        init(conflict[1][3][1][4]) := 1;
        init(conflict[1][3][1][2]) := 1;
        init(conflict[1][3][2][4]) := 1;
        init(conflict[1][3][2][1]) := 0;
        init(conflict[1][3][2][3]) := 1;
        init(conflict[1][3][4][2]) := 2;
        init(conflict[1][3][4][3]) := 2;
        init(conflict[1][3][4][1]) := 2;
        init(conflict[1][4][3][3]) := 0;
        init(conflict[1][4][1][1]) := 0;
        init(conflict[1][4][2][2]) := 0;
        init(conflict[1][4][4][4]) := 0;
        init(conflict[1][4][3][1]) := 0;
        init(conflict[1][4][3][2]) := 0;
        init(conflict[1][4][3][4]) := 1;
        init(conflict[1][4][1][3]) := 1;
        init(conflict[1][4][1][4]) := 1;
        init(conflict[1][4][1][2]) := 1;
        init(conflict[1][4][2][4]) := 1;
        init(conflict[1][4][2][1]) := 0;
        init(conflict[1][4][2][3]) := 1;
        init(conflict[1][4][4][2]) := 0;
        init(conflict[1][4][4][3]) := 0;
        init(conflict[1][4][4][1]) := 0;
        init(conflict[1][2][3][3]) := 0;
        init(conflict[1][2][1][1]) := 0;
        init(conflict[1][2][2][2]) := 0;
        init(conflict[1][2][4][4]) := 0;
        init(conflict[1][2][3][1]) := 3;
        init(conflict[1][2][3][2]) := 3;
        init(conflict[1][2][3][4]) := 1;
        init(conflict[1][2][1][3]) := 1;
        init(conflict[1][2][1][4]) := 1;
        init(conflict[1][2][1][2]) := 1;
        init(conflict[1][2][2][4]) := 1;
        init(conflict[1][2][2][1]) := 0;
        init(conflict[1][2][2][3]) := 1;
        init(conflict[1][2][4][2]) := 2;
        init(conflict[1][2][4][3]) := 2;
        init(conflict[1][2][4][1]) := 2;
        init(conflict[2][4][3][3]) := 0;
        init(conflict[2][4][1][1]) := 0;
        init(conflict[2][4][2][2]) := 0;
        init(conflict[2][4][4][4]) := 0;
        init(conflict[2][4][3][1]) := 1;
        init(conflict[2][4][3][2]) := 0;
        init(conflict[2][4][3][4]) := 1;
        init(conflict[2][4][1][3]) := 2;
        init(conflict[2][4][1][4]) := 2;
        init(conflict[2][4][1][2]) := 2;
        init(conflict[2][4][2][4]) := 1;
        init(conflict[2][4][2][1]) := 1;
        init(conflict[2][4][2][3]) := 1;
        init(conflict[2][4][4][2]) := 0;
        init(conflict[2][4][4][3]) := 0;
        init(conflict[2][4][4][1]) := 1;
        init(conflict[2][1][3][3]) := 0;
        init(conflict[2][1][1][1]) := 0;
        init(conflict[2][1][2][2]) := 0;
        init(conflict[2][1][4][4]) := 0;
        init(conflict[2][1][3][1]) := 1;
        init(conflict[2][1][3][2]) := 0;
        init(conflict[2][1][3][4]) := 1;
        init(conflict[2][1][1][3]) := 0;
        init(conflict[2][1][1][4]) := 0;
        init(conflict[2][1][1][2]) := 0;
        init(conflict[2][1][2][4]) := 1;
        init(conflict[2][1][2][1]) := 1;
        init(conflict[2][1][2][3]) := 1;
        init(conflict[2][1][4][2]) := 0;
        init(conflict[2][1][4][3]) := 0;
        init(conflict[2][1][4][1]) := 1;
        init(conflict[2][3][3][3]) := 0;
        init(conflict[2][3][1][1]) := 0;
        init(conflict[2][3][2][2]) := 0;
        init(conflict[2][3][4][4]) := 0;
        init(conflict[2][3][3][1]) := 1;
        init(conflict[2][3][3][2]) := 0;
        init(conflict[2][3][3][4]) := 1;
        init(conflict[2][3][1][3]) := 2;
        init(conflict[2][3][1][4]) := 2;
        init(conflict[2][3][1][2]) := 2;
        init(conflict[2][3][2][4]) := 1;
        init(conflict[2][3][2][1]) := 1;
        init(conflict[2][3][2][3]) := 1;
        init(conflict[2][3][4][2]) := 3;
        init(conflict[2][3][4][3]) := 3;
        init(conflict[2][3][4][1]) := 1;
        init(conflict[4][2][3][3]) := 0;
        init(conflict[4][2][1][1]) := 0;
        init(conflict[4][2][2][2]) := 0;
        init(conflict[4][2][4][4]) := 0;
        init(conflict[4][2][3][1]) := 2;
        init(conflict[4][2][3][2]) := 2;
        init(conflict[4][2][3][4]) := 2;
        init(conflict[4][2][1][3]) := 1;
        init(conflict[4][2][1][4]) := 0;
        init(conflict[4][2][1][2]) := 1;
        init(conflict[4][2][2][4]) := 0;
        init(conflict[4][2][2][1]) := 0;
        init(conflict[4][2][2][3]) := 1;
        init(conflict[4][2][4][2]) := 1;
        init(conflict[4][2][4][3]) := 1;
        init(conflict[4][2][4][1]) := 1;
        init(conflict[4][3][3][3]) := 0;
        init(conflict[4][3][1][1]) := 0;
        init(conflict[4][3][2][2]) := 0;
        init(conflict[4][3][4][4]) := 0;
        init(conflict[4][3][3][1]) := 0;
        init(conflict[4][3][3][2]) := 0;
        init(conflict[4][3][3][4]) := 0;
        init(conflict[4][3][1][3]) := 1;
        init(conflict[4][3][1][4]) := 0;
        init(conflict[4][3][1][2]) := 1;
        init(conflict[4][3][2][4]) := 0;
        init(conflict[4][3][2][1]) := 0;
        init(conflict[4][3][2][3]) := 1;
        init(conflict[4][3][4][2]) := 1;
        init(conflict[4][3][4][3]) := 1;
        init(conflict[4][3][4][1]) := 1;
        init(conflict[4][1][3][3]) := 0;
        init(conflict[4][1][1][1]) := 0;
        init(conflict[4][1][2][2]) := 0;
        init(conflict[4][1][4][4]) := 0;
        init(conflict[4][1][3][1]) := 2;
        init(conflict[4][1][3][2]) := 2;
        init(conflict[4][1][3][4]) := 2;
        init(conflict[4][1][1][3]) := 1;
        init(conflict[4][1][1][4]) := 0;
        init(conflict[4][1][1][2]) := 1;
        init(conflict[4][1][2][4]) := 3;
        init(conflict[4][1][2][1]) := 3;
        init(conflict[4][1][2][3]) := 1;
        init(conflict[4][1][4][2]) := 1;
        init(conflict[4][1][4][3]) := 1;
        init(conflict[4][1][4][1]) := 1;
'''


sqrt_init = '''[0, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54];'''