
MODULE main
    DEFINE
        num_cars := 4;
        
        THETA := 1;
        conflict := [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 1, 1], [0, 0, 1, 1], [3, 3, 0, 1], [2, 2, 2, 0]], [[0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1], [2, 2, 2, 0]], [[0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [1, 0, 1, 1], [1, 0, 0, 1], [1, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 2, 2, 2], [1, 0, 1, 1], [1, 0, 0, 1], [1, 3, 3, 0]], [[0, 2, 2, 2], [1, 0, 1, 1], [1, 0, 0, 1], [1, 0, 0, 0]]], [[[0, 1, 0, 0], [2, 0, 2, 2], [1, 1, 0, 1], [1, 1, 0, 0]], [[0, 1, 0, 0], [0, 0, 0, 0], [1, 1, 0, 1], [1, 1, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 3, 3], [2, 0, 2, 2], [1, 1, 0, 1], [1, 1, 0, 0]]], [[[0, 1, 1, 0], [3, 0, 1, 3], [2, 2, 0, 2], [1, 1, 1, 0]], [[0, 1, 1, 0], [0, 0, 1, 0], [2, 2, 0, 2], [1, 1, 1, 0]], [[0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 0, 0], [1, 1, 1, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]];

        
            cleared_1 :=  car0.position != 1 & car1.position != 1 & car2.position != 1 & car3.position != 1 ;
            cleared_2 :=  car0.position != 2 & car1.position != 2 & car2.position != 2 & car3.position != 2 ;
            cleared_3 :=  car0.position != 3 & car1.position != 3 & car2.position != 3 & car3.position != 3 ;
            cleared_4 :=  car0.position != 4 & car1.position != 4 & car2.position != 4 & car3.position != 4 ;

        
            
                car0_isIn_1 := car0.position = 1;
                car0_isIn_2 := car0.position = 2;
                car0_isIn_3 := car0.position = 3;
                car0_isIn_4 := car0.position = 4;
            
                car1_isIn_1 := car1.position = 1;
                car1_isIn_2 := car1.position = 2;
                car1_isIn_3 := car1.position = 3;
                car1_isIn_4 := car1.position = 4;
            
                car2_isIn_1 := car2.position = 1;
                car2_isIn_2 := car2.position = 2;
                car2_isIn_3 := car2.position = 3;
                car2_isIn_4 := car2.position = 4;
            
                car3_isIn_1 := car3.position = 1;
                car3_isIn_2 := car3.position = 2;
                car3_isIn_3 := car3.position = 3;
                car3_isIn_4 := car3.position = 4;

        VAR
        
            car0 : car( 0, 1, -1 );
            car1 : car( 1, 1, -1 );
            car2 : car( 2, 1, -1 );
            car3 : car( 3, 1, -1 );
        

    ASSIGN

    
        
            
            
                next(car0.decision[1]) := case
                    (
                    (car0.priority < car1.priority) | 
                    (car0.priority = car1.priority & car0.id > car1.id) ) & 
                    !car1.EXITING &
                    conflict[car0.from][car0.to][car1.from][car1.to] > car0.tcl_index &
                    (
                    
                        
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_2 + THETA <= car1.timeAt_1 | 
                                        car0.accelTimeAt_1 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_2 + THETA <= car1.timeAt_2 | 
                                        car0.accelTimeAt_1 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_2 + THETA <= car1.timeAt_3 | 
                                        car0.accelTimeAt_1 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_2 + THETA <= car1.timeAt_4 | 
                                        car0.accelTimeAt_1 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_3 + THETA <= car1.timeAt_1 | 
                                        car0.accelTimeAt_2 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_3 + THETA <= car1.timeAt_2 | 
                                        car0.accelTimeAt_2 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_3 + THETA <= car1.timeAt_3 | 
                                        car0.accelTimeAt_2 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_3 + THETA <= car1.timeAt_4 | 
                                        car0.accelTimeAt_2 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_4 + THETA <= car1.timeAt_1 | 
                                        car0.accelTimeAt_3 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_4 + THETA <= car1.timeAt_2 | 
                                        car0.accelTimeAt_3 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_4 + THETA <= car1.timeAt_3 | 
                                        car0.accelTimeAt_3 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_4 + THETA <= car1.timeAt_4 | 
                                        car0.accelTimeAt_3 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_5 + THETA <= car1.timeAt_1 | 
                                        car0.accelTimeAt_4 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_5 + THETA <= car1.timeAt_2 | 
                                        car0.accelTimeAt_4 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_5 + THETA <= car1.timeAt_3 | 
                                        car0.accelTimeAt_4 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_5 + THETA <= car1.timeAt_4 | 
                                        car0.accelTimeAt_4 >= car1.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car0.dec_param;

                    TRUE : car0.acc_param;
                esac;
            
                next(car0.decision[2]) := case
                    (
                    (car0.priority < car2.priority) | 
                    (car0.priority = car2.priority & car0.id > car2.id) ) & 
                    !car2.EXITING &
                    conflict[car0.from][car0.to][car2.from][car2.to] > car0.tcl_index &
                    (
                    
                        
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_2 + THETA <= car2.timeAt_1 | 
                                        car0.accelTimeAt_1 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_2 + THETA <= car2.timeAt_2 | 
                                        car0.accelTimeAt_1 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_2 + THETA <= car2.timeAt_3 | 
                                        car0.accelTimeAt_1 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_2 + THETA <= car2.timeAt_4 | 
                                        car0.accelTimeAt_1 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_3 + THETA <= car2.timeAt_1 | 
                                        car0.accelTimeAt_2 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_3 + THETA <= car2.timeAt_2 | 
                                        car0.accelTimeAt_2 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_3 + THETA <= car2.timeAt_3 | 
                                        car0.accelTimeAt_2 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_3 + THETA <= car2.timeAt_4 | 
                                        car0.accelTimeAt_2 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_4 + THETA <= car2.timeAt_1 | 
                                        car0.accelTimeAt_3 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_4 + THETA <= car2.timeAt_2 | 
                                        car0.accelTimeAt_3 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_4 + THETA <= car2.timeAt_3 | 
                                        car0.accelTimeAt_3 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_4 + THETA <= car2.timeAt_4 | 
                                        car0.accelTimeAt_3 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_5 + THETA <= car2.timeAt_1 | 
                                        car0.accelTimeAt_4 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_5 + THETA <= car2.timeAt_2 | 
                                        car0.accelTimeAt_4 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_5 + THETA <= car2.timeAt_3 | 
                                        car0.accelTimeAt_4 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_5 + THETA <= car2.timeAt_4 | 
                                        car0.accelTimeAt_4 >= car2.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car0.dec_param;

                    TRUE : car0.acc_param;
                esac;
            
                next(car0.decision[3]) := case
                    (
                    (car0.priority < car3.priority) | 
                    (car0.priority = car3.priority & car0.id > car3.id) ) & 
                    !car3.EXITING &
                    conflict[car0.from][car0.to][car3.from][car3.to] > car0.tcl_index &
                    (
                    
                        
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_2 + THETA <= car3.timeAt_1 | 
                                        car0.accelTimeAt_1 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_2 + THETA <= car3.timeAt_2 | 
                                        car0.accelTimeAt_1 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_2 + THETA <= car3.timeAt_3 | 
                                        car0.accelTimeAt_1 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_2 + THETA <= car3.timeAt_4 | 
                                        car0.accelTimeAt_1 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_3 + THETA <= car3.timeAt_1 | 
                                        car0.accelTimeAt_2 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_3 + THETA <= car3.timeAt_2 | 
                                        car0.accelTimeAt_2 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_3 + THETA <= car3.timeAt_3 | 
                                        car0.accelTimeAt_2 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_3 + THETA <= car3.timeAt_4 | 
                                        car0.accelTimeAt_2 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_4 + THETA <= car3.timeAt_1 | 
                                        car0.accelTimeAt_3 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_4 + THETA <= car3.timeAt_2 | 
                                        car0.accelTimeAt_3 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_4 + THETA <= car3.timeAt_3 | 
                                        car0.accelTimeAt_3 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_4 + THETA <= car3.timeAt_4 | 
                                        car0.accelTimeAt_3 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            !(car0.timeAt_5 + THETA <= car3.timeAt_1 | 
                                        car0.accelTimeAt_4 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            !(car0.timeAt_5 + THETA <= car3.timeAt_2 | 
                                        car0.accelTimeAt_4 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            !(car0.timeAt_5 + THETA <= car3.timeAt_3 | 
                                        car0.accelTimeAt_4 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            !(car0.timeAt_5 + THETA <= car3.timeAt_4 | 
                                        car0.accelTimeAt_4 >= car3.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car0.dec_param;

                    TRUE : car0.acc_param;
                esac;
        
            
                next(car1.decision[0]) := case
                    (
                    (car1.priority < car0.priority) | 
                    (car1.priority = car0.priority & car1.id > car0.id) ) & 
                    !car0.EXITING &
                    conflict[car1.from][car1.to][car0.from][car0.to] > car1.tcl_index &
                    (
                    
                        
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_2 + THETA <= car0.timeAt_1 | 
                                        car1.accelTimeAt_1 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_2 + THETA <= car0.timeAt_2 | 
                                        car1.accelTimeAt_1 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_2 + THETA <= car0.timeAt_3 | 
                                        car1.accelTimeAt_1 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_2 + THETA <= car0.timeAt_4 | 
                                        car1.accelTimeAt_1 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_3 + THETA <= car0.timeAt_1 | 
                                        car1.accelTimeAt_2 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_3 + THETA <= car0.timeAt_2 | 
                                        car1.accelTimeAt_2 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_3 + THETA <= car0.timeAt_3 | 
                                        car1.accelTimeAt_2 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_3 + THETA <= car0.timeAt_4 | 
                                        car1.accelTimeAt_2 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_4 + THETA <= car0.timeAt_1 | 
                                        car1.accelTimeAt_3 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_4 + THETA <= car0.timeAt_2 | 
                                        car1.accelTimeAt_3 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_4 + THETA <= car0.timeAt_3 | 
                                        car1.accelTimeAt_3 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_4 + THETA <= car0.timeAt_4 | 
                                        car1.accelTimeAt_3 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_5 + THETA <= car0.timeAt_1 | 
                                        car1.accelTimeAt_4 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_5 + THETA <= car0.timeAt_2 | 
                                        car1.accelTimeAt_4 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_5 + THETA <= car0.timeAt_3 | 
                                        car1.accelTimeAt_4 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_5 + THETA <= car0.timeAt_4 | 
                                        car1.accelTimeAt_4 >= car0.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car1.dec_param;

                    TRUE : car1.acc_param;
                esac;
            
            
                next(car1.decision[2]) := case
                    (
                    (car1.priority < car2.priority) | 
                    (car1.priority = car2.priority & car1.id > car2.id) ) & 
                    !car2.EXITING &
                    conflict[car1.from][car1.to][car2.from][car2.to] > car1.tcl_index &
                    (
                    
                        
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_2 + THETA <= car2.timeAt_1 | 
                                        car1.accelTimeAt_1 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_2 + THETA <= car2.timeAt_2 | 
                                        car1.accelTimeAt_1 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_2 + THETA <= car2.timeAt_3 | 
                                        car1.accelTimeAt_1 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_2 + THETA <= car2.timeAt_4 | 
                                        car1.accelTimeAt_1 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_3 + THETA <= car2.timeAt_1 | 
                                        car1.accelTimeAt_2 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_3 + THETA <= car2.timeAt_2 | 
                                        car1.accelTimeAt_2 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_3 + THETA <= car2.timeAt_3 | 
                                        car1.accelTimeAt_2 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_3 + THETA <= car2.timeAt_4 | 
                                        car1.accelTimeAt_2 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_4 + THETA <= car2.timeAt_1 | 
                                        car1.accelTimeAt_3 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_4 + THETA <= car2.timeAt_2 | 
                                        car1.accelTimeAt_3 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_4 + THETA <= car2.timeAt_3 | 
                                        car1.accelTimeAt_3 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_4 + THETA <= car2.timeAt_4 | 
                                        car1.accelTimeAt_3 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_5 + THETA <= car2.timeAt_1 | 
                                        car1.accelTimeAt_4 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_5 + THETA <= car2.timeAt_2 | 
                                        car1.accelTimeAt_4 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_5 + THETA <= car2.timeAt_3 | 
                                        car1.accelTimeAt_4 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_5 + THETA <= car2.timeAt_4 | 
                                        car1.accelTimeAt_4 >= car2.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car1.dec_param;

                    TRUE : car1.acc_param;
                esac;
            
                next(car1.decision[3]) := case
                    (
                    (car1.priority < car3.priority) | 
                    (car1.priority = car3.priority & car1.id > car3.id) ) & 
                    !car3.EXITING &
                    conflict[car1.from][car1.to][car3.from][car3.to] > car1.tcl_index &
                    (
                    
                        
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_2 + THETA <= car3.timeAt_1 | 
                                        car1.accelTimeAt_1 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_2 + THETA <= car3.timeAt_2 | 
                                        car1.accelTimeAt_1 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_2 + THETA <= car3.timeAt_3 | 
                                        car1.accelTimeAt_1 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_2 + THETA <= car3.timeAt_4 | 
                                        car1.accelTimeAt_1 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_3 + THETA <= car3.timeAt_1 | 
                                        car1.accelTimeAt_2 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_3 + THETA <= car3.timeAt_2 | 
                                        car1.accelTimeAt_2 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_3 + THETA <= car3.timeAt_3 | 
                                        car1.accelTimeAt_2 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_3 + THETA <= car3.timeAt_4 | 
                                        car1.accelTimeAt_2 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_4 + THETA <= car3.timeAt_1 | 
                                        car1.accelTimeAt_3 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_4 + THETA <= car3.timeAt_2 | 
                                        car1.accelTimeAt_3 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_4 + THETA <= car3.timeAt_3 | 
                                        car1.accelTimeAt_3 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_4 + THETA <= car3.timeAt_4 | 
                                        car1.accelTimeAt_3 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            !(car1.timeAt_5 + THETA <= car3.timeAt_1 | 
                                        car1.accelTimeAt_4 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            !(car1.timeAt_5 + THETA <= car3.timeAt_2 | 
                                        car1.accelTimeAt_4 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            !(car1.timeAt_5 + THETA <= car3.timeAt_3 | 
                                        car1.accelTimeAt_4 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            !(car1.timeAt_5 + THETA <= car3.timeAt_4 | 
                                        car1.accelTimeAt_4 >= car3.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car1.dec_param;

                    TRUE : car1.acc_param;
                esac;
        
            
                next(car2.decision[0]) := case
                    (
                    (car2.priority < car0.priority) | 
                    (car2.priority = car0.priority & car2.id > car0.id) ) & 
                    !car0.EXITING &
                    conflict[car2.from][car2.to][car0.from][car0.to] > car2.tcl_index &
                    (
                    
                        
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_2 + THETA <= car0.timeAt_1 | 
                                        car2.accelTimeAt_1 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_2 + THETA <= car0.timeAt_2 | 
                                        car2.accelTimeAt_1 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_2 + THETA <= car0.timeAt_3 | 
                                        car2.accelTimeAt_1 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_2 + THETA <= car0.timeAt_4 | 
                                        car2.accelTimeAt_1 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_3 + THETA <= car0.timeAt_1 | 
                                        car2.accelTimeAt_2 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_3 + THETA <= car0.timeAt_2 | 
                                        car2.accelTimeAt_2 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_3 + THETA <= car0.timeAt_3 | 
                                        car2.accelTimeAt_2 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_3 + THETA <= car0.timeAt_4 | 
                                        car2.accelTimeAt_2 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_4 + THETA <= car0.timeAt_1 | 
                                        car2.accelTimeAt_3 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_4 + THETA <= car0.timeAt_2 | 
                                        car2.accelTimeAt_3 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_4 + THETA <= car0.timeAt_3 | 
                                        car2.accelTimeAt_3 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_4 + THETA <= car0.timeAt_4 | 
                                        car2.accelTimeAt_3 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_5 + THETA <= car0.timeAt_1 | 
                                        car2.accelTimeAt_4 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_5 + THETA <= car0.timeAt_2 | 
                                        car2.accelTimeAt_4 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_5 + THETA <= car0.timeAt_3 | 
                                        car2.accelTimeAt_4 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_5 + THETA <= car0.timeAt_4 | 
                                        car2.accelTimeAt_4 >= car0.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car2.dec_param;

                    TRUE : car2.acc_param;
                esac;
            
                next(car2.decision[1]) := case
                    (
                    (car2.priority < car1.priority) | 
                    (car2.priority = car1.priority & car2.id > car1.id) ) & 
                    !car1.EXITING &
                    conflict[car2.from][car2.to][car1.from][car1.to] > car2.tcl_index &
                    (
                    
                        
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_2 + THETA <= car1.timeAt_1 | 
                                        car2.accelTimeAt_1 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_2 + THETA <= car1.timeAt_2 | 
                                        car2.accelTimeAt_1 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_2 + THETA <= car1.timeAt_3 | 
                                        car2.accelTimeAt_1 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_2 + THETA <= car1.timeAt_4 | 
                                        car2.accelTimeAt_1 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_3 + THETA <= car1.timeAt_1 | 
                                        car2.accelTimeAt_2 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_3 + THETA <= car1.timeAt_2 | 
                                        car2.accelTimeAt_2 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_3 + THETA <= car1.timeAt_3 | 
                                        car2.accelTimeAt_2 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_3 + THETA <= car1.timeAt_4 | 
                                        car2.accelTimeAt_2 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_4 + THETA <= car1.timeAt_1 | 
                                        car2.accelTimeAt_3 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_4 + THETA <= car1.timeAt_2 | 
                                        car2.accelTimeAt_3 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_4 + THETA <= car1.timeAt_3 | 
                                        car2.accelTimeAt_3 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_4 + THETA <= car1.timeAt_4 | 
                                        car2.accelTimeAt_3 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_5 + THETA <= car1.timeAt_1 | 
                                        car2.accelTimeAt_4 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_5 + THETA <= car1.timeAt_2 | 
                                        car2.accelTimeAt_4 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_5 + THETA <= car1.timeAt_3 | 
                                        car2.accelTimeAt_4 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_5 + THETA <= car1.timeAt_4 | 
                                        car2.accelTimeAt_4 >= car1.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car2.dec_param;

                    TRUE : car2.acc_param;
                esac;
            
            
                next(car2.decision[3]) := case
                    (
                    (car2.priority < car3.priority) | 
                    (car2.priority = car3.priority & car2.id > car3.id) ) & 
                    !car3.EXITING &
                    conflict[car2.from][car2.to][car3.from][car3.to] > car2.tcl_index &
                    (
                    
                        
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_2 + THETA <= car3.timeAt_1 | 
                                        car2.accelTimeAt_1 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_2 + THETA <= car3.timeAt_2 | 
                                        car2.accelTimeAt_1 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_2 + THETA <= car3.timeAt_3 | 
                                        car2.accelTimeAt_1 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_2 + THETA <= car3.timeAt_4 | 
                                        car2.accelTimeAt_1 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_3 + THETA <= car3.timeAt_1 | 
                                        car2.accelTimeAt_2 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_3 + THETA <= car3.timeAt_2 | 
                                        car2.accelTimeAt_2 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_3 + THETA <= car3.timeAt_3 | 
                                        car2.accelTimeAt_2 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_3 + THETA <= car3.timeAt_4 | 
                                        car2.accelTimeAt_2 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_4 + THETA <= car3.timeAt_1 | 
                                        car2.accelTimeAt_3 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_4 + THETA <= car3.timeAt_2 | 
                                        car2.accelTimeAt_3 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_4 + THETA <= car3.timeAt_3 | 
                                        car2.accelTimeAt_3 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_4 + THETA <= car3.timeAt_4 | 
                                        car2.accelTimeAt_3 >= car3.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            !(car2.timeAt_5 + THETA <= car3.timeAt_1 | 
                                        car2.accelTimeAt_4 >= car3.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            !(car2.timeAt_5 + THETA <= car3.timeAt_2 | 
                                        car2.accelTimeAt_4 >= car3.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            !(car2.timeAt_5 + THETA <= car3.timeAt_3 | 
                                        car2.accelTimeAt_4 >= car3.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            !(car2.timeAt_5 + THETA <= car3.timeAt_4 | 
                                        car2.accelTimeAt_4 >= car3.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car2.dec_param;

                    TRUE : car2.acc_param;
                esac;
        
            
                next(car3.decision[0]) := case
                    (
                    (car3.priority < car0.priority) | 
                    (car3.priority = car0.priority & car3.id > car0.id) ) & 
                    !car0.EXITING &
                    conflict[car3.from][car3.to][car0.from][car0.to] > car3.tcl_index &
                    (
                    
                        
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_2 + THETA <= car0.timeAt_1 | 
                                        car3.accelTimeAt_1 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_2 + THETA <= car0.timeAt_2 | 
                                        car3.accelTimeAt_1 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_2 + THETA <= car0.timeAt_3 | 
                                        car3.accelTimeAt_1 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 1 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_2 + THETA <= car0.timeAt_4 | 
                                        car3.accelTimeAt_1 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_3 + THETA <= car0.timeAt_1 | 
                                        car3.accelTimeAt_2 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_3 + THETA <= car0.timeAt_2 | 
                                        car3.accelTimeAt_2 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_3 + THETA <= car0.timeAt_3 | 
                                        car3.accelTimeAt_2 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 2 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_3 + THETA <= car0.timeAt_4 | 
                                        car3.accelTimeAt_2 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_4 + THETA <= car0.timeAt_1 | 
                                        car3.accelTimeAt_3 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_4 + THETA <= car0.timeAt_2 | 
                                        car3.accelTimeAt_3 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_4 + THETA <= car0.timeAt_3 | 
                                        car3.accelTimeAt_3 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 3 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_4 + THETA <= car0.timeAt_4 | 
                                        car3.accelTimeAt_3 >= car0.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_5 + THETA <= car0.timeAt_1 | 
                                        car3.accelTimeAt_4 >= car0.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_5 + THETA <= car0.timeAt_2 | 
                                        car3.accelTimeAt_4 >= car0.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_5 + THETA <= car0.timeAt_3 | 
                                        car3.accelTimeAt_4 >= car0.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car0.from][car0.to] = 4 &
                            conflict[car0.from][car0.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_5 + THETA <= car0.timeAt_4 | 
                                        car3.accelTimeAt_4 >= car0.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car3.dec_param;

                    TRUE : car3.acc_param;
                esac;
            
                next(car3.decision[1]) := case
                    (
                    (car3.priority < car1.priority) | 
                    (car3.priority = car1.priority & car3.id > car1.id) ) & 
                    !car1.EXITING &
                    conflict[car3.from][car3.to][car1.from][car1.to] > car3.tcl_index &
                    (
                    
                        
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_2 + THETA <= car1.timeAt_1 | 
                                        car3.accelTimeAt_1 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_2 + THETA <= car1.timeAt_2 | 
                                        car3.accelTimeAt_1 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_2 + THETA <= car1.timeAt_3 | 
                                        car3.accelTimeAt_1 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 1 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_2 + THETA <= car1.timeAt_4 | 
                                        car3.accelTimeAt_1 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_3 + THETA <= car1.timeAt_1 | 
                                        car3.accelTimeAt_2 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_3 + THETA <= car1.timeAt_2 | 
                                        car3.accelTimeAt_2 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_3 + THETA <= car1.timeAt_3 | 
                                        car3.accelTimeAt_2 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 2 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_3 + THETA <= car1.timeAt_4 | 
                                        car3.accelTimeAt_2 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_4 + THETA <= car1.timeAt_1 | 
                                        car3.accelTimeAt_3 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_4 + THETA <= car1.timeAt_2 | 
                                        car3.accelTimeAt_3 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_4 + THETA <= car1.timeAt_3 | 
                                        car3.accelTimeAt_3 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 3 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_4 + THETA <= car1.timeAt_4 | 
                                        car3.accelTimeAt_3 >= car1.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_5 + THETA <= car1.timeAt_1 | 
                                        car3.accelTimeAt_4 >= car1.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_5 + THETA <= car1.timeAt_2 | 
                                        car3.accelTimeAt_4 >= car1.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_5 + THETA <= car1.timeAt_3 | 
                                        car3.accelTimeAt_4 >= car1.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car1.from][car1.to] = 4 &
                            conflict[car1.from][car1.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_5 + THETA <= car1.timeAt_4 | 
                                        car3.accelTimeAt_4 >= car1.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car3.dec_param;

                    TRUE : car3.acc_param;
                esac;
            
                next(car3.decision[2]) := case
                    (
                    (car3.priority < car2.priority) | 
                    (car3.priority = car2.priority & car3.id > car2.id) ) & 
                    !car2.EXITING &
                    conflict[car3.from][car3.to][car2.from][car2.to] > car3.tcl_index &
                    (
                    
                        
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_2 + THETA <= car2.timeAt_1 | 
                                        car3.accelTimeAt_1 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_2 + THETA <= car2.timeAt_2 | 
                                        car3.accelTimeAt_1 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_2 + THETA <= car2.timeAt_3 | 
                                        car3.accelTimeAt_1 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 1 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_2 + THETA <= car2.timeAt_4 | 
                                        car3.accelTimeAt_1 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_3 + THETA <= car2.timeAt_1 | 
                                        car3.accelTimeAt_2 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_3 + THETA <= car2.timeAt_2 | 
                                        car3.accelTimeAt_2 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_3 + THETA <= car2.timeAt_3 | 
                                        car3.accelTimeAt_2 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 2 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_3 + THETA <= car2.timeAt_4 | 
                                        car3.accelTimeAt_2 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_4 + THETA <= car2.timeAt_1 | 
                                        car3.accelTimeAt_3 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_4 + THETA <= car2.timeAt_2 | 
                                        car3.accelTimeAt_3 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_4 + THETA <= car2.timeAt_3 | 
                                        car3.accelTimeAt_3 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 3 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_4 + THETA <= car2.timeAt_4 | 
                                        car3.accelTimeAt_3 >= car2.timeAt_5 + THETA)
                            ) |
                        
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 1 &
                            !(car3.timeAt_5 + THETA <= car2.timeAt_1 | 
                                        car3.accelTimeAt_4 >= car2.timeAt_2 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 2 &
                            !(car3.timeAt_5 + THETA <= car2.timeAt_2 | 
                                        car3.accelTimeAt_4 >= car2.timeAt_3 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 3 &
                            !(car3.timeAt_5 + THETA <= car2.timeAt_3 | 
                                        car3.accelTimeAt_4 >= car2.timeAt_4 + THETA)
                            ) |
                            (
                            conflict[car3.from][car3.to][car2.from][car2.to] = 4 &
                            conflict[car2.from][car2.to][car3.from][car3.to] = 4 &
                            !(car3.timeAt_5 + THETA <= car2.timeAt_4 | 
                                        car3.accelTimeAt_4 >= car2.timeAt_5 + THETA)
                            ) | FALSE
                    ) 
                    : car3.dec_param;

                    TRUE : car3.acc_param;
                esac;
             
    


    

    DEFINE
        
            
                car0car1_crash := (car0.CROSSING & car1.CROSSING & car0.position = car1.position );
                car0car2_crash := (car0.CROSSING & car2.CROSSING & car0.position = car2.position );
                car0car3_crash := (car0.CROSSING & car3.CROSSING & car0.position = car3.position );
            
                car1car2_crash := (car1.CROSSING & car2.CROSSING & car1.position = car2.position );
                car1car3_crash := (car1.CROSSING & car3.CROSSING & car1.position = car3.position );
            
                car2car3_crash := (car2.CROSSING & car3.CROSSING & car2.position = car3.position );

        cars_exited :=  car0.EXITING & car1.EXITING & car2.EXITING & car3.EXITING ;



    LTLSPEC



    (
                    car0.from != car0.to &
                    car1.from != car1.to &
                    car2.from != car2.to &
                    car3.from != car3.to )
    ->
    (

        G
        
            
                !car0car1_crash &
                !car0car2_crash &
                !car0car3_crash &
            
                !car1car2_crash &
                !car1car3_crash &
            
                !car2car3_crash & TRUE

        &
        
        F cars_exited

        &

        G(
        
            car0.speed != 0 |
            car1.speed != 0 |
            car2.speed != 0 |
            car3.speed != 0 | FALSE)
        
        &

        G
        
            car0.acc >= 0 |
            car1.acc >= 0 |
            car2.acc >= 0 |
            car3.acc >= 0 | FALSE


        &
        G(
        
            
                ( car0_isIn_1 -> X ( car0_isIn_1 | cleared_1 ) ) &
                ( car1_isIn_1 -> X ( car1_isIn_1 | cleared_1 ) ) &
                ( car2_isIn_1 -> X ( car2_isIn_1 | cleared_1 ) ) &
                ( car3_isIn_1 -> X ( car3_isIn_1 | cleared_1 ) ) &
            
                ( car0_isIn_2 -> X ( car0_isIn_2 | cleared_2 ) ) &
                ( car1_isIn_2 -> X ( car1_isIn_2 | cleared_2 ) ) &
                ( car2_isIn_2 -> X ( car2_isIn_2 | cleared_2 ) ) &
                ( car3_isIn_2 -> X ( car3_isIn_2 | cleared_2 ) ) &
            
                ( car0_isIn_3 -> X ( car0_isIn_3 | cleared_3 ) ) &
                ( car1_isIn_3 -> X ( car1_isIn_3 | cleared_3 ) ) &
                ( car2_isIn_3 -> X ( car2_isIn_3 | cleared_3 ) ) &
                ( car3_isIn_3 -> X ( car3_isIn_3 | cleared_3 ) ) &
            
                ( car0_isIn_4 -> X ( car0_isIn_4 | cleared_4 ) ) &
                ( car1_isIn_4 -> X ( car1_isIn_4 | cleared_4 ) ) &
                ( car2_isIn_4 -> X ( car2_isIn_4 | cleared_4 ) ) &
                ( car3_isIn_4 -> X ( car3_isIn_4 | cleared_4 ) ) & TRUE )

    )




MODULE car(id_in, acc_in, dec_in)
    DEFINE

    lanes := 2;
    max_tcl_index := lanes + 2;
    max_position := (lanes * lanes) + 1;
    max_speed := 8;

    cell_progress := 30; -- progress to cross a cell.
    max_progress := cell_progress * max_tcl_index;  -- progress to cross the entire intersection.

    tcl_index := progress / cell_progress;
    position := tcl[tcl_index];
    t_max_speed := (max_speed - speed) / acc;
    t_null_speed := - speed / acc;
    t_max_speed_acc := (max_speed - speed) / acc_in;

    next_speed := max( min(speed + acc, max_speed), 0);
    next_speed_acc := max( min(speed + acc_in, max_speed), 0);


    
    
    
        acc := min(min(min(decision[0], decision[1]), decision[2]), decision[3]); --TO BE GENERALIZED

    acc_param := acc_in;
    dec_param := dec_in;


    
        timeAt_1 := case
            
                (0 < t_max_speed & acc > 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  1 * cell_progress ) |
                (0 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (0-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (0 <= t_null_speed & acc < 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  1 * cell_progress )
                : 0;
                (1 < t_max_speed & acc > 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  1 * cell_progress ) |
                (1 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (1-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (1 <= t_null_speed & acc < 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  1 * cell_progress )
                : 1;
                (2 < t_max_speed & acc > 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  1 * cell_progress ) |
                (2 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (2-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (2 <= t_null_speed & acc < 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  1 * cell_progress )
                : 2;
                (3 < t_max_speed & acc > 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  1 * cell_progress ) |
                (3 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (3-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (3 <= t_null_speed & acc < 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  1 * cell_progress )
                : 3;
                (4 < t_max_speed & acc > 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  1 * cell_progress ) |
                (4 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (4-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (4 <= t_null_speed & acc < 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  1 * cell_progress )
                : 4;
                (5 < t_max_speed & acc > 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  1 * cell_progress ) |
                (5 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (5-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (5 <= t_null_speed & acc < 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  1 * cell_progress )
                : 5;
                (6 < t_max_speed & acc > 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  1 * cell_progress ) |
                (6 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (6-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (6 <= t_null_speed & acc < 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  1 * cell_progress )
                : 6;
                (7 < t_max_speed & acc > 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  1 * cell_progress ) |
                (7 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (7-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (7 <= t_null_speed & acc < 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  1 * cell_progress )
                : 7;
                (8 < t_max_speed & acc > 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  1 * cell_progress ) |
                (8 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (8-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (8 <= t_null_speed & acc < 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  1 * cell_progress )
                : 8;
                (9 < t_max_speed & acc > 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  1 * cell_progress ) |
                (9 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (9-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (9 <= t_null_speed & acc < 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  1 * cell_progress )
                : 9;
                (10 < t_max_speed & acc > 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  1 * cell_progress ) |
                (10 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (10-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (10 <= t_null_speed & acc < 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  1 * cell_progress )
                : 10;
                (11 < t_max_speed & acc > 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  1 * cell_progress ) |
                (11 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (11-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (11 <= t_null_speed & acc < 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  1 * cell_progress )
                : 11;
                (12 < t_max_speed & acc > 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  1 * cell_progress ) |
                (12 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (12-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (12 <= t_null_speed & acc < 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  1 * cell_progress )
                : 12;
                (13 < t_max_speed & acc > 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  1 * cell_progress ) |
                (13 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (13-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (13 <= t_null_speed & acc < 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  1 * cell_progress )
                : 13;
                (14 < t_max_speed & acc > 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  1 * cell_progress ) |
                (14 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (14-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (14 <= t_null_speed & acc < 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  1 * cell_progress )
                : 14;
                (15 < t_max_speed & acc > 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  1 * cell_progress ) |
                (15 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (15-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (15 <= t_null_speed & acc < 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  1 * cell_progress )
                : 15;
                (16 < t_max_speed & acc > 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  1 * cell_progress ) |
                (16 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (16-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (16 <= t_null_speed & acc < 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  1 * cell_progress )
                : 16;
                (17 < t_max_speed & acc > 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  1 * cell_progress ) |
                (17 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (17-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (17 <= t_null_speed & acc < 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  1 * cell_progress )
                : 17;
                (18 < t_max_speed & acc > 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  1 * cell_progress ) |
                (18 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (18-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (18 <= t_null_speed & acc < 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  1 * cell_progress )
                : 18;
                (19 < t_max_speed & acc > 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  1 * cell_progress ) |
                (19 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (19-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (19 <= t_null_speed & acc < 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  1 * cell_progress )
                : 19;
                (20 < t_max_speed & acc > 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  1 * cell_progress ) |
                (20 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (20-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (20 <= t_null_speed & acc < 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  1 * cell_progress )
                : 20;
                (21 < t_max_speed & acc > 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  1 * cell_progress ) |
                (21 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (21-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (21 <= t_null_speed & acc < 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  1 * cell_progress )
                : 21;
                (22 < t_max_speed & acc > 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  1 * cell_progress ) |
                (22 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (22-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (22 <= t_null_speed & acc < 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  1 * cell_progress )
                : 22;
                (23 < t_max_speed & acc > 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  1 * cell_progress ) |
                (23 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (23-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (23 <= t_null_speed & acc < 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  1 * cell_progress )
                : 23;
                (24 < t_max_speed & acc > 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  1 * cell_progress ) |
                (24 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (24-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (24 <= t_null_speed & acc < 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  1 * cell_progress )
                : 24;
                (25 < t_max_speed & acc > 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  1 * cell_progress ) |
                (25 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (25-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (25 <= t_null_speed & acc < 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  1 * cell_progress )
                : 25;
                (26 < t_max_speed & acc > 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  1 * cell_progress ) |
                (26 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (26-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (26 <= t_null_speed & acc < 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  1 * cell_progress )
                : 26;
                (27 < t_max_speed & acc > 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  1 * cell_progress ) |
                (27 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (27-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (27 <= t_null_speed & acc < 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  1 * cell_progress )
                : 27;
                (28 < t_max_speed & acc > 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  1 * cell_progress ) |
                (28 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (28-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (28 <= t_null_speed & acc < 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  1 * cell_progress )
                : 28;
                (29 < t_max_speed & acc > 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  1 * cell_progress ) |
                (29 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (29-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (29 <= t_null_speed & acc < 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  1 * cell_progress )
                : 29;
                (30 < t_max_speed & acc > 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  1 * cell_progress ) |
                (30 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (30-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (30 <= t_null_speed & acc < 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  1 * cell_progress )
                : 30;
                (31 < t_max_speed & acc > 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  1 * cell_progress ) |
                (31 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (31-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (31 <= t_null_speed & acc < 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  1 * cell_progress )
                : 31;
                (32 < t_max_speed & acc > 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  1 * cell_progress ) |
                (32 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (32-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (32 <= t_null_speed & acc < 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  1 * cell_progress )
                : 32;
                (33 < t_max_speed & acc > 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  1 * cell_progress ) |
                (33 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (33-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (33 <= t_null_speed & acc < 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  1 * cell_progress )
                : 33;
                (34 < t_max_speed & acc > 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  1 * cell_progress ) |
                (34 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (34-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (34 <= t_null_speed & acc < 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  1 * cell_progress )
                : 34;
                (35 < t_max_speed & acc > 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  1 * cell_progress ) |
                (35 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (35-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (35 <= t_null_speed & acc < 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  1 * cell_progress )
                : 35;
                (36 < t_max_speed & acc > 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  1 * cell_progress ) |
                (36 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (36-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (36 <= t_null_speed & acc < 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  1 * cell_progress )
                : 36;
                (37 < t_max_speed & acc > 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  1 * cell_progress ) |
                (37 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (37-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (37 <= t_null_speed & acc < 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  1 * cell_progress )
                : 37;
                (38 < t_max_speed & acc > 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  1 * cell_progress ) |
                (38 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (38-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (38 <= t_null_speed & acc < 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  1 * cell_progress )
                : 38;
                (39 < t_max_speed & acc > 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  1 * cell_progress ) |
                (39 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (39-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (39 <= t_null_speed & acc < 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  1 * cell_progress )
                : 39;
                (40 < t_max_speed & acc > 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  1 * cell_progress ) |
                (40 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (40-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (40 <= t_null_speed & acc < 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  1 * cell_progress )
                : 40;
                (41 < t_max_speed & acc > 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  1 * cell_progress ) |
                (41 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (41-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (41 <= t_null_speed & acc < 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  1 * cell_progress )
                : 41;
                (42 < t_max_speed & acc > 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  1 * cell_progress ) |
                (42 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (42-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (42 <= t_null_speed & acc < 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  1 * cell_progress )
                : 42;
                (43 < t_max_speed & acc > 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  1 * cell_progress ) |
                (43 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (43-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (43 <= t_null_speed & acc < 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  1 * cell_progress )
                : 43;
                (44 < t_max_speed & acc > 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  1 * cell_progress ) |
                (44 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (44-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (44 <= t_null_speed & acc < 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  1 * cell_progress )
                : 44;
                (45 < t_max_speed & acc > 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  1 * cell_progress ) |
                (45 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (45-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (45 <= t_null_speed & acc < 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  1 * cell_progress )
                : 45;
                (46 < t_max_speed & acc > 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  1 * cell_progress ) |
                (46 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (46-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (46 <= t_null_speed & acc < 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  1 * cell_progress )
                : 46;
                (47 < t_max_speed & acc > 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  1 * cell_progress ) |
                (47 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (47-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (47 <= t_null_speed & acc < 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  1 * cell_progress )
                : 47;
                (48 < t_max_speed & acc > 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  1 * cell_progress ) |
                (48 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (48-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (48 <= t_null_speed & acc < 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  1 * cell_progress )
                : 48;
                (49 < t_max_speed & acc > 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  1 * cell_progress ) |
                (49 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (49-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (49 <= t_null_speed & acc < 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  1 * cell_progress )
                : 49;
                (50 < t_max_speed & acc > 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  1 * cell_progress ) |
                (50 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (50-t_max_speed) * max_speed + progress >=  1 * cell_progress) |
                (50 <= t_null_speed & acc < 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  1 * cell_progress )
                : 50;
            TRUE : 50;
        esac;
        timeAt_2 := case
            
                (0 < t_max_speed & acc > 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  2 * cell_progress ) |
                (0 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (0-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (0 <= t_null_speed & acc < 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  2 * cell_progress )
                : 0;
                (1 < t_max_speed & acc > 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  2 * cell_progress ) |
                (1 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (1-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (1 <= t_null_speed & acc < 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  2 * cell_progress )
                : 1;
                (2 < t_max_speed & acc > 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  2 * cell_progress ) |
                (2 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (2-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (2 <= t_null_speed & acc < 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  2 * cell_progress )
                : 2;
                (3 < t_max_speed & acc > 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  2 * cell_progress ) |
                (3 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (3-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (3 <= t_null_speed & acc < 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  2 * cell_progress )
                : 3;
                (4 < t_max_speed & acc > 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  2 * cell_progress ) |
                (4 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (4-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (4 <= t_null_speed & acc < 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  2 * cell_progress )
                : 4;
                (5 < t_max_speed & acc > 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  2 * cell_progress ) |
                (5 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (5-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (5 <= t_null_speed & acc < 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  2 * cell_progress )
                : 5;
                (6 < t_max_speed & acc > 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  2 * cell_progress ) |
                (6 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (6-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (6 <= t_null_speed & acc < 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  2 * cell_progress )
                : 6;
                (7 < t_max_speed & acc > 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  2 * cell_progress ) |
                (7 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (7-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (7 <= t_null_speed & acc < 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  2 * cell_progress )
                : 7;
                (8 < t_max_speed & acc > 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  2 * cell_progress ) |
                (8 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (8-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (8 <= t_null_speed & acc < 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  2 * cell_progress )
                : 8;
                (9 < t_max_speed & acc > 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  2 * cell_progress ) |
                (9 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (9-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (9 <= t_null_speed & acc < 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  2 * cell_progress )
                : 9;
                (10 < t_max_speed & acc > 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  2 * cell_progress ) |
                (10 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (10-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (10 <= t_null_speed & acc < 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  2 * cell_progress )
                : 10;
                (11 < t_max_speed & acc > 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  2 * cell_progress ) |
                (11 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (11-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (11 <= t_null_speed & acc < 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  2 * cell_progress )
                : 11;
                (12 < t_max_speed & acc > 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  2 * cell_progress ) |
                (12 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (12-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (12 <= t_null_speed & acc < 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  2 * cell_progress )
                : 12;
                (13 < t_max_speed & acc > 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  2 * cell_progress ) |
                (13 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (13-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (13 <= t_null_speed & acc < 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  2 * cell_progress )
                : 13;
                (14 < t_max_speed & acc > 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  2 * cell_progress ) |
                (14 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (14-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (14 <= t_null_speed & acc < 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  2 * cell_progress )
                : 14;
                (15 < t_max_speed & acc > 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  2 * cell_progress ) |
                (15 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (15-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (15 <= t_null_speed & acc < 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  2 * cell_progress )
                : 15;
                (16 < t_max_speed & acc > 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  2 * cell_progress ) |
                (16 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (16-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (16 <= t_null_speed & acc < 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  2 * cell_progress )
                : 16;
                (17 < t_max_speed & acc > 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  2 * cell_progress ) |
                (17 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (17-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (17 <= t_null_speed & acc < 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  2 * cell_progress )
                : 17;
                (18 < t_max_speed & acc > 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  2 * cell_progress ) |
                (18 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (18-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (18 <= t_null_speed & acc < 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  2 * cell_progress )
                : 18;
                (19 < t_max_speed & acc > 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  2 * cell_progress ) |
                (19 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (19-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (19 <= t_null_speed & acc < 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  2 * cell_progress )
                : 19;
                (20 < t_max_speed & acc > 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  2 * cell_progress ) |
                (20 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (20-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (20 <= t_null_speed & acc < 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  2 * cell_progress )
                : 20;
                (21 < t_max_speed & acc > 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  2 * cell_progress ) |
                (21 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (21-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (21 <= t_null_speed & acc < 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  2 * cell_progress )
                : 21;
                (22 < t_max_speed & acc > 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  2 * cell_progress ) |
                (22 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (22-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (22 <= t_null_speed & acc < 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  2 * cell_progress )
                : 22;
                (23 < t_max_speed & acc > 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  2 * cell_progress ) |
                (23 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (23-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (23 <= t_null_speed & acc < 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  2 * cell_progress )
                : 23;
                (24 < t_max_speed & acc > 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  2 * cell_progress ) |
                (24 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (24-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (24 <= t_null_speed & acc < 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  2 * cell_progress )
                : 24;
                (25 < t_max_speed & acc > 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  2 * cell_progress ) |
                (25 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (25-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (25 <= t_null_speed & acc < 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  2 * cell_progress )
                : 25;
                (26 < t_max_speed & acc > 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  2 * cell_progress ) |
                (26 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (26-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (26 <= t_null_speed & acc < 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  2 * cell_progress )
                : 26;
                (27 < t_max_speed & acc > 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  2 * cell_progress ) |
                (27 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (27-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (27 <= t_null_speed & acc < 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  2 * cell_progress )
                : 27;
                (28 < t_max_speed & acc > 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  2 * cell_progress ) |
                (28 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (28-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (28 <= t_null_speed & acc < 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  2 * cell_progress )
                : 28;
                (29 < t_max_speed & acc > 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  2 * cell_progress ) |
                (29 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (29-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (29 <= t_null_speed & acc < 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  2 * cell_progress )
                : 29;
                (30 < t_max_speed & acc > 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  2 * cell_progress ) |
                (30 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (30-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (30 <= t_null_speed & acc < 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  2 * cell_progress )
                : 30;
                (31 < t_max_speed & acc > 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  2 * cell_progress ) |
                (31 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (31-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (31 <= t_null_speed & acc < 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  2 * cell_progress )
                : 31;
                (32 < t_max_speed & acc > 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  2 * cell_progress ) |
                (32 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (32-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (32 <= t_null_speed & acc < 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  2 * cell_progress )
                : 32;
                (33 < t_max_speed & acc > 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  2 * cell_progress ) |
                (33 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (33-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (33 <= t_null_speed & acc < 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  2 * cell_progress )
                : 33;
                (34 < t_max_speed & acc > 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  2 * cell_progress ) |
                (34 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (34-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (34 <= t_null_speed & acc < 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  2 * cell_progress )
                : 34;
                (35 < t_max_speed & acc > 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  2 * cell_progress ) |
                (35 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (35-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (35 <= t_null_speed & acc < 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  2 * cell_progress )
                : 35;
                (36 < t_max_speed & acc > 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  2 * cell_progress ) |
                (36 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (36-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (36 <= t_null_speed & acc < 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  2 * cell_progress )
                : 36;
                (37 < t_max_speed & acc > 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  2 * cell_progress ) |
                (37 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (37-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (37 <= t_null_speed & acc < 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  2 * cell_progress )
                : 37;
                (38 < t_max_speed & acc > 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  2 * cell_progress ) |
                (38 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (38-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (38 <= t_null_speed & acc < 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  2 * cell_progress )
                : 38;
                (39 < t_max_speed & acc > 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  2 * cell_progress ) |
                (39 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (39-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (39 <= t_null_speed & acc < 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  2 * cell_progress )
                : 39;
                (40 < t_max_speed & acc > 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  2 * cell_progress ) |
                (40 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (40-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (40 <= t_null_speed & acc < 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  2 * cell_progress )
                : 40;
                (41 < t_max_speed & acc > 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  2 * cell_progress ) |
                (41 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (41-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (41 <= t_null_speed & acc < 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  2 * cell_progress )
                : 41;
                (42 < t_max_speed & acc > 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  2 * cell_progress ) |
                (42 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (42-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (42 <= t_null_speed & acc < 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  2 * cell_progress )
                : 42;
                (43 < t_max_speed & acc > 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  2 * cell_progress ) |
                (43 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (43-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (43 <= t_null_speed & acc < 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  2 * cell_progress )
                : 43;
                (44 < t_max_speed & acc > 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  2 * cell_progress ) |
                (44 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (44-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (44 <= t_null_speed & acc < 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  2 * cell_progress )
                : 44;
                (45 < t_max_speed & acc > 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  2 * cell_progress ) |
                (45 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (45-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (45 <= t_null_speed & acc < 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  2 * cell_progress )
                : 45;
                (46 < t_max_speed & acc > 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  2 * cell_progress ) |
                (46 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (46-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (46 <= t_null_speed & acc < 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  2 * cell_progress )
                : 46;
                (47 < t_max_speed & acc > 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  2 * cell_progress ) |
                (47 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (47-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (47 <= t_null_speed & acc < 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  2 * cell_progress )
                : 47;
                (48 < t_max_speed & acc > 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  2 * cell_progress ) |
                (48 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (48-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (48 <= t_null_speed & acc < 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  2 * cell_progress )
                : 48;
                (49 < t_max_speed & acc > 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  2 * cell_progress ) |
                (49 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (49-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (49 <= t_null_speed & acc < 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  2 * cell_progress )
                : 49;
                (50 < t_max_speed & acc > 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  2 * cell_progress ) |
                (50 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (50-t_max_speed) * max_speed + progress >=  2 * cell_progress) |
                (50 <= t_null_speed & acc < 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  2 * cell_progress )
                : 50;
            TRUE : 50;
        esac;
        timeAt_3 := case
            
                (0 < t_max_speed & acc > 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  3 * cell_progress ) |
                (0 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (0-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (0 <= t_null_speed & acc < 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  3 * cell_progress )
                : 0;
                (1 < t_max_speed & acc > 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  3 * cell_progress ) |
                (1 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (1-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (1 <= t_null_speed & acc < 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  3 * cell_progress )
                : 1;
                (2 < t_max_speed & acc > 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  3 * cell_progress ) |
                (2 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (2-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (2 <= t_null_speed & acc < 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  3 * cell_progress )
                : 2;
                (3 < t_max_speed & acc > 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  3 * cell_progress ) |
                (3 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (3-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (3 <= t_null_speed & acc < 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  3 * cell_progress )
                : 3;
                (4 < t_max_speed & acc > 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  3 * cell_progress ) |
                (4 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (4-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (4 <= t_null_speed & acc < 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  3 * cell_progress )
                : 4;
                (5 < t_max_speed & acc > 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  3 * cell_progress ) |
                (5 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (5-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (5 <= t_null_speed & acc < 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  3 * cell_progress )
                : 5;
                (6 < t_max_speed & acc > 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  3 * cell_progress ) |
                (6 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (6-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (6 <= t_null_speed & acc < 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  3 * cell_progress )
                : 6;
                (7 < t_max_speed & acc > 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  3 * cell_progress ) |
                (7 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (7-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (7 <= t_null_speed & acc < 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  3 * cell_progress )
                : 7;
                (8 < t_max_speed & acc > 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  3 * cell_progress ) |
                (8 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (8-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (8 <= t_null_speed & acc < 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  3 * cell_progress )
                : 8;
                (9 < t_max_speed & acc > 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  3 * cell_progress ) |
                (9 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (9-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (9 <= t_null_speed & acc < 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  3 * cell_progress )
                : 9;
                (10 < t_max_speed & acc > 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  3 * cell_progress ) |
                (10 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (10-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (10 <= t_null_speed & acc < 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  3 * cell_progress )
                : 10;
                (11 < t_max_speed & acc > 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  3 * cell_progress ) |
                (11 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (11-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (11 <= t_null_speed & acc < 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  3 * cell_progress )
                : 11;
                (12 < t_max_speed & acc > 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  3 * cell_progress ) |
                (12 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (12-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (12 <= t_null_speed & acc < 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  3 * cell_progress )
                : 12;
                (13 < t_max_speed & acc > 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  3 * cell_progress ) |
                (13 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (13-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (13 <= t_null_speed & acc < 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  3 * cell_progress )
                : 13;
                (14 < t_max_speed & acc > 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  3 * cell_progress ) |
                (14 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (14-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (14 <= t_null_speed & acc < 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  3 * cell_progress )
                : 14;
                (15 < t_max_speed & acc > 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  3 * cell_progress ) |
                (15 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (15-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (15 <= t_null_speed & acc < 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  3 * cell_progress )
                : 15;
                (16 < t_max_speed & acc > 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  3 * cell_progress ) |
                (16 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (16-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (16 <= t_null_speed & acc < 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  3 * cell_progress )
                : 16;
                (17 < t_max_speed & acc > 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  3 * cell_progress ) |
                (17 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (17-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (17 <= t_null_speed & acc < 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  3 * cell_progress )
                : 17;
                (18 < t_max_speed & acc > 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  3 * cell_progress ) |
                (18 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (18-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (18 <= t_null_speed & acc < 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  3 * cell_progress )
                : 18;
                (19 < t_max_speed & acc > 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  3 * cell_progress ) |
                (19 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (19-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (19 <= t_null_speed & acc < 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  3 * cell_progress )
                : 19;
                (20 < t_max_speed & acc > 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  3 * cell_progress ) |
                (20 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (20-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (20 <= t_null_speed & acc < 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  3 * cell_progress )
                : 20;
                (21 < t_max_speed & acc > 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  3 * cell_progress ) |
                (21 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (21-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (21 <= t_null_speed & acc < 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  3 * cell_progress )
                : 21;
                (22 < t_max_speed & acc > 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  3 * cell_progress ) |
                (22 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (22-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (22 <= t_null_speed & acc < 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  3 * cell_progress )
                : 22;
                (23 < t_max_speed & acc > 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  3 * cell_progress ) |
                (23 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (23-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (23 <= t_null_speed & acc < 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  3 * cell_progress )
                : 23;
                (24 < t_max_speed & acc > 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  3 * cell_progress ) |
                (24 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (24-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (24 <= t_null_speed & acc < 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  3 * cell_progress )
                : 24;
                (25 < t_max_speed & acc > 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  3 * cell_progress ) |
                (25 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (25-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (25 <= t_null_speed & acc < 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  3 * cell_progress )
                : 25;
                (26 < t_max_speed & acc > 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  3 * cell_progress ) |
                (26 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (26-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (26 <= t_null_speed & acc < 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  3 * cell_progress )
                : 26;
                (27 < t_max_speed & acc > 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  3 * cell_progress ) |
                (27 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (27-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (27 <= t_null_speed & acc < 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  3 * cell_progress )
                : 27;
                (28 < t_max_speed & acc > 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  3 * cell_progress ) |
                (28 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (28-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (28 <= t_null_speed & acc < 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  3 * cell_progress )
                : 28;
                (29 < t_max_speed & acc > 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  3 * cell_progress ) |
                (29 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (29-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (29 <= t_null_speed & acc < 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  3 * cell_progress )
                : 29;
                (30 < t_max_speed & acc > 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  3 * cell_progress ) |
                (30 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (30-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (30 <= t_null_speed & acc < 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  3 * cell_progress )
                : 30;
                (31 < t_max_speed & acc > 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  3 * cell_progress ) |
                (31 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (31-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (31 <= t_null_speed & acc < 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  3 * cell_progress )
                : 31;
                (32 < t_max_speed & acc > 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  3 * cell_progress ) |
                (32 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (32-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (32 <= t_null_speed & acc < 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  3 * cell_progress )
                : 32;
                (33 < t_max_speed & acc > 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  3 * cell_progress ) |
                (33 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (33-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (33 <= t_null_speed & acc < 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  3 * cell_progress )
                : 33;
                (34 < t_max_speed & acc > 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  3 * cell_progress ) |
                (34 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (34-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (34 <= t_null_speed & acc < 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  3 * cell_progress )
                : 34;
                (35 < t_max_speed & acc > 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  3 * cell_progress ) |
                (35 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (35-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (35 <= t_null_speed & acc < 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  3 * cell_progress )
                : 35;
                (36 < t_max_speed & acc > 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  3 * cell_progress ) |
                (36 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (36-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (36 <= t_null_speed & acc < 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  3 * cell_progress )
                : 36;
                (37 < t_max_speed & acc > 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  3 * cell_progress ) |
                (37 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (37-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (37 <= t_null_speed & acc < 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  3 * cell_progress )
                : 37;
                (38 < t_max_speed & acc > 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  3 * cell_progress ) |
                (38 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (38-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (38 <= t_null_speed & acc < 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  3 * cell_progress )
                : 38;
                (39 < t_max_speed & acc > 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  3 * cell_progress ) |
                (39 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (39-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (39 <= t_null_speed & acc < 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  3 * cell_progress )
                : 39;
                (40 < t_max_speed & acc > 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  3 * cell_progress ) |
                (40 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (40-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (40 <= t_null_speed & acc < 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  3 * cell_progress )
                : 40;
                (41 < t_max_speed & acc > 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  3 * cell_progress ) |
                (41 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (41-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (41 <= t_null_speed & acc < 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  3 * cell_progress )
                : 41;
                (42 < t_max_speed & acc > 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  3 * cell_progress ) |
                (42 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (42-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (42 <= t_null_speed & acc < 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  3 * cell_progress )
                : 42;
                (43 < t_max_speed & acc > 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  3 * cell_progress ) |
                (43 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (43-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (43 <= t_null_speed & acc < 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  3 * cell_progress )
                : 43;
                (44 < t_max_speed & acc > 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  3 * cell_progress ) |
                (44 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (44-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (44 <= t_null_speed & acc < 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  3 * cell_progress )
                : 44;
                (45 < t_max_speed & acc > 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  3 * cell_progress ) |
                (45 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (45-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (45 <= t_null_speed & acc < 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  3 * cell_progress )
                : 45;
                (46 < t_max_speed & acc > 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  3 * cell_progress ) |
                (46 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (46-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (46 <= t_null_speed & acc < 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  3 * cell_progress )
                : 46;
                (47 < t_max_speed & acc > 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  3 * cell_progress ) |
                (47 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (47-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (47 <= t_null_speed & acc < 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  3 * cell_progress )
                : 47;
                (48 < t_max_speed & acc > 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  3 * cell_progress ) |
                (48 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (48-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (48 <= t_null_speed & acc < 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  3 * cell_progress )
                : 48;
                (49 < t_max_speed & acc > 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  3 * cell_progress ) |
                (49 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (49-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (49 <= t_null_speed & acc < 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  3 * cell_progress )
                : 49;
                (50 < t_max_speed & acc > 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  3 * cell_progress ) |
                (50 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (50-t_max_speed) * max_speed + progress >=  3 * cell_progress) |
                (50 <= t_null_speed & acc < 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  3 * cell_progress )
                : 50;
            TRUE : 50;
        esac;
        timeAt_4 := case
            
                (0 < t_max_speed & acc > 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  4 * cell_progress ) |
                (0 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (0-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (0 <= t_null_speed & acc < 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  4 * cell_progress )
                : 0;
                (1 < t_max_speed & acc > 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  4 * cell_progress ) |
                (1 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (1-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (1 <= t_null_speed & acc < 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  4 * cell_progress )
                : 1;
                (2 < t_max_speed & acc > 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  4 * cell_progress ) |
                (2 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (2-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (2 <= t_null_speed & acc < 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  4 * cell_progress )
                : 2;
                (3 < t_max_speed & acc > 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  4 * cell_progress ) |
                (3 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (3-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (3 <= t_null_speed & acc < 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  4 * cell_progress )
                : 3;
                (4 < t_max_speed & acc > 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  4 * cell_progress ) |
                (4 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (4-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (4 <= t_null_speed & acc < 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  4 * cell_progress )
                : 4;
                (5 < t_max_speed & acc > 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  4 * cell_progress ) |
                (5 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (5-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (5 <= t_null_speed & acc < 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  4 * cell_progress )
                : 5;
                (6 < t_max_speed & acc > 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  4 * cell_progress ) |
                (6 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (6-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (6 <= t_null_speed & acc < 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  4 * cell_progress )
                : 6;
                (7 < t_max_speed & acc > 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  4 * cell_progress ) |
                (7 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (7-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (7 <= t_null_speed & acc < 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  4 * cell_progress )
                : 7;
                (8 < t_max_speed & acc > 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  4 * cell_progress ) |
                (8 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (8-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (8 <= t_null_speed & acc < 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  4 * cell_progress )
                : 8;
                (9 < t_max_speed & acc > 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  4 * cell_progress ) |
                (9 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (9-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (9 <= t_null_speed & acc < 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  4 * cell_progress )
                : 9;
                (10 < t_max_speed & acc > 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  4 * cell_progress ) |
                (10 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (10-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (10 <= t_null_speed & acc < 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  4 * cell_progress )
                : 10;
                (11 < t_max_speed & acc > 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  4 * cell_progress ) |
                (11 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (11-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (11 <= t_null_speed & acc < 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  4 * cell_progress )
                : 11;
                (12 < t_max_speed & acc > 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  4 * cell_progress ) |
                (12 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (12-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (12 <= t_null_speed & acc < 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  4 * cell_progress )
                : 12;
                (13 < t_max_speed & acc > 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  4 * cell_progress ) |
                (13 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (13-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (13 <= t_null_speed & acc < 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  4 * cell_progress )
                : 13;
                (14 < t_max_speed & acc > 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  4 * cell_progress ) |
                (14 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (14-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (14 <= t_null_speed & acc < 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  4 * cell_progress )
                : 14;
                (15 < t_max_speed & acc > 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  4 * cell_progress ) |
                (15 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (15-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (15 <= t_null_speed & acc < 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  4 * cell_progress )
                : 15;
                (16 < t_max_speed & acc > 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  4 * cell_progress ) |
                (16 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (16-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (16 <= t_null_speed & acc < 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  4 * cell_progress )
                : 16;
                (17 < t_max_speed & acc > 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  4 * cell_progress ) |
                (17 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (17-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (17 <= t_null_speed & acc < 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  4 * cell_progress )
                : 17;
                (18 < t_max_speed & acc > 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  4 * cell_progress ) |
                (18 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (18-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (18 <= t_null_speed & acc < 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  4 * cell_progress )
                : 18;
                (19 < t_max_speed & acc > 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  4 * cell_progress ) |
                (19 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (19-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (19 <= t_null_speed & acc < 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  4 * cell_progress )
                : 19;
                (20 < t_max_speed & acc > 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  4 * cell_progress ) |
                (20 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (20-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (20 <= t_null_speed & acc < 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  4 * cell_progress )
                : 20;
                (21 < t_max_speed & acc > 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  4 * cell_progress ) |
                (21 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (21-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (21 <= t_null_speed & acc < 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  4 * cell_progress )
                : 21;
                (22 < t_max_speed & acc > 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  4 * cell_progress ) |
                (22 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (22-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (22 <= t_null_speed & acc < 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  4 * cell_progress )
                : 22;
                (23 < t_max_speed & acc > 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  4 * cell_progress ) |
                (23 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (23-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (23 <= t_null_speed & acc < 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  4 * cell_progress )
                : 23;
                (24 < t_max_speed & acc > 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  4 * cell_progress ) |
                (24 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (24-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (24 <= t_null_speed & acc < 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  4 * cell_progress )
                : 24;
                (25 < t_max_speed & acc > 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  4 * cell_progress ) |
                (25 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (25-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (25 <= t_null_speed & acc < 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  4 * cell_progress )
                : 25;
                (26 < t_max_speed & acc > 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  4 * cell_progress ) |
                (26 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (26-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (26 <= t_null_speed & acc < 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  4 * cell_progress )
                : 26;
                (27 < t_max_speed & acc > 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  4 * cell_progress ) |
                (27 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (27-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (27 <= t_null_speed & acc < 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  4 * cell_progress )
                : 27;
                (28 < t_max_speed & acc > 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  4 * cell_progress ) |
                (28 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (28-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (28 <= t_null_speed & acc < 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  4 * cell_progress )
                : 28;
                (29 < t_max_speed & acc > 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  4 * cell_progress ) |
                (29 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (29-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (29 <= t_null_speed & acc < 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  4 * cell_progress )
                : 29;
                (30 < t_max_speed & acc > 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  4 * cell_progress ) |
                (30 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (30-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (30 <= t_null_speed & acc < 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  4 * cell_progress )
                : 30;
                (31 < t_max_speed & acc > 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  4 * cell_progress ) |
                (31 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (31-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (31 <= t_null_speed & acc < 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  4 * cell_progress )
                : 31;
                (32 < t_max_speed & acc > 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  4 * cell_progress ) |
                (32 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (32-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (32 <= t_null_speed & acc < 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  4 * cell_progress )
                : 32;
                (33 < t_max_speed & acc > 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  4 * cell_progress ) |
                (33 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (33-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (33 <= t_null_speed & acc < 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  4 * cell_progress )
                : 33;
                (34 < t_max_speed & acc > 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  4 * cell_progress ) |
                (34 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (34-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (34 <= t_null_speed & acc < 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  4 * cell_progress )
                : 34;
                (35 < t_max_speed & acc > 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  4 * cell_progress ) |
                (35 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (35-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (35 <= t_null_speed & acc < 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  4 * cell_progress )
                : 35;
                (36 < t_max_speed & acc > 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  4 * cell_progress ) |
                (36 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (36-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (36 <= t_null_speed & acc < 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  4 * cell_progress )
                : 36;
                (37 < t_max_speed & acc > 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  4 * cell_progress ) |
                (37 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (37-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (37 <= t_null_speed & acc < 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  4 * cell_progress )
                : 37;
                (38 < t_max_speed & acc > 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  4 * cell_progress ) |
                (38 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (38-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (38 <= t_null_speed & acc < 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  4 * cell_progress )
                : 38;
                (39 < t_max_speed & acc > 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  4 * cell_progress ) |
                (39 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (39-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (39 <= t_null_speed & acc < 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  4 * cell_progress )
                : 39;
                (40 < t_max_speed & acc > 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  4 * cell_progress ) |
                (40 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (40-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (40 <= t_null_speed & acc < 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  4 * cell_progress )
                : 40;
                (41 < t_max_speed & acc > 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  4 * cell_progress ) |
                (41 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (41-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (41 <= t_null_speed & acc < 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  4 * cell_progress )
                : 41;
                (42 < t_max_speed & acc > 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  4 * cell_progress ) |
                (42 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (42-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (42 <= t_null_speed & acc < 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  4 * cell_progress )
                : 42;
                (43 < t_max_speed & acc > 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  4 * cell_progress ) |
                (43 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (43-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (43 <= t_null_speed & acc < 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  4 * cell_progress )
                : 43;
                (44 < t_max_speed & acc > 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  4 * cell_progress ) |
                (44 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (44-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (44 <= t_null_speed & acc < 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  4 * cell_progress )
                : 44;
                (45 < t_max_speed & acc > 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  4 * cell_progress ) |
                (45 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (45-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (45 <= t_null_speed & acc < 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  4 * cell_progress )
                : 45;
                (46 < t_max_speed & acc > 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  4 * cell_progress ) |
                (46 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (46-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (46 <= t_null_speed & acc < 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  4 * cell_progress )
                : 46;
                (47 < t_max_speed & acc > 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  4 * cell_progress ) |
                (47 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (47-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (47 <= t_null_speed & acc < 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  4 * cell_progress )
                : 47;
                (48 < t_max_speed & acc > 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  4 * cell_progress ) |
                (48 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (48-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (48 <= t_null_speed & acc < 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  4 * cell_progress )
                : 48;
                (49 < t_max_speed & acc > 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  4 * cell_progress ) |
                (49 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (49-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (49 <= t_null_speed & acc < 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  4 * cell_progress )
                : 49;
                (50 < t_max_speed & acc > 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  4 * cell_progress ) |
                (50 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (50-t_max_speed) * max_speed + progress >=  4 * cell_progress) |
                (50 <= t_null_speed & acc < 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  4 * cell_progress )
                : 50;
            TRUE : 50;
        esac;
        timeAt_5 := case
            
                (0 < t_max_speed & acc > 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  5 * cell_progress ) |
                (0 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (0-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (0 <= t_null_speed & acc < 0 &
                        acc * 0 * (0+1) / 2 + speed * 0 + progress >=  5 * cell_progress )
                : 0;
                (1 < t_max_speed & acc > 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  5 * cell_progress ) |
                (1 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (1-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (1 <= t_null_speed & acc < 0 &
                        acc * 1 * (1+1) / 2 + speed * 1 + progress >=  5 * cell_progress )
                : 1;
                (2 < t_max_speed & acc > 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  5 * cell_progress ) |
                (2 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (2-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (2 <= t_null_speed & acc < 0 &
                        acc * 2 * (2+1) / 2 + speed * 2 + progress >=  5 * cell_progress )
                : 2;
                (3 < t_max_speed & acc > 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  5 * cell_progress ) |
                (3 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (3-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (3 <= t_null_speed & acc < 0 &
                        acc * 3 * (3+1) / 2 + speed * 3 + progress >=  5 * cell_progress )
                : 3;
                (4 < t_max_speed & acc > 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  5 * cell_progress ) |
                (4 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (4-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (4 <= t_null_speed & acc < 0 &
                        acc * 4 * (4+1) / 2 + speed * 4 + progress >=  5 * cell_progress )
                : 4;
                (5 < t_max_speed & acc > 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  5 * cell_progress ) |
                (5 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (5-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (5 <= t_null_speed & acc < 0 &
                        acc * 5 * (5+1) / 2 + speed * 5 + progress >=  5 * cell_progress )
                : 5;
                (6 < t_max_speed & acc > 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  5 * cell_progress ) |
                (6 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (6-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (6 <= t_null_speed & acc < 0 &
                        acc * 6 * (6+1) / 2 + speed * 6 + progress >=  5 * cell_progress )
                : 6;
                (7 < t_max_speed & acc > 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  5 * cell_progress ) |
                (7 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (7-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (7 <= t_null_speed & acc < 0 &
                        acc * 7 * (7+1) / 2 + speed * 7 + progress >=  5 * cell_progress )
                : 7;
                (8 < t_max_speed & acc > 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  5 * cell_progress ) |
                (8 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (8-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (8 <= t_null_speed & acc < 0 &
                        acc * 8 * (8+1) / 2 + speed * 8 + progress >=  5 * cell_progress )
                : 8;
                (9 < t_max_speed & acc > 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  5 * cell_progress ) |
                (9 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (9-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (9 <= t_null_speed & acc < 0 &
                        acc * 9 * (9+1) / 2 + speed * 9 + progress >=  5 * cell_progress )
                : 9;
                (10 < t_max_speed & acc > 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  5 * cell_progress ) |
                (10 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (10-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (10 <= t_null_speed & acc < 0 &
                        acc * 10 * (10+1) / 2 + speed * 10 + progress >=  5 * cell_progress )
                : 10;
                (11 < t_max_speed & acc > 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  5 * cell_progress ) |
                (11 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (11-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (11 <= t_null_speed & acc < 0 &
                        acc * 11 * (11+1) / 2 + speed * 11 + progress >=  5 * cell_progress )
                : 11;
                (12 < t_max_speed & acc > 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  5 * cell_progress ) |
                (12 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (12-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (12 <= t_null_speed & acc < 0 &
                        acc * 12 * (12+1) / 2 + speed * 12 + progress >=  5 * cell_progress )
                : 12;
                (13 < t_max_speed & acc > 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  5 * cell_progress ) |
                (13 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (13-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (13 <= t_null_speed & acc < 0 &
                        acc * 13 * (13+1) / 2 + speed * 13 + progress >=  5 * cell_progress )
                : 13;
                (14 < t_max_speed & acc > 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  5 * cell_progress ) |
                (14 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (14-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (14 <= t_null_speed & acc < 0 &
                        acc * 14 * (14+1) / 2 + speed * 14 + progress >=  5 * cell_progress )
                : 14;
                (15 < t_max_speed & acc > 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  5 * cell_progress ) |
                (15 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (15-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (15 <= t_null_speed & acc < 0 &
                        acc * 15 * (15+1) / 2 + speed * 15 + progress >=  5 * cell_progress )
                : 15;
                (16 < t_max_speed & acc > 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  5 * cell_progress ) |
                (16 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (16-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (16 <= t_null_speed & acc < 0 &
                        acc * 16 * (16+1) / 2 + speed * 16 + progress >=  5 * cell_progress )
                : 16;
                (17 < t_max_speed & acc > 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  5 * cell_progress ) |
                (17 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (17-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (17 <= t_null_speed & acc < 0 &
                        acc * 17 * (17+1) / 2 + speed * 17 + progress >=  5 * cell_progress )
                : 17;
                (18 < t_max_speed & acc > 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  5 * cell_progress ) |
                (18 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (18-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (18 <= t_null_speed & acc < 0 &
                        acc * 18 * (18+1) / 2 + speed * 18 + progress >=  5 * cell_progress )
                : 18;
                (19 < t_max_speed & acc > 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  5 * cell_progress ) |
                (19 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (19-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (19 <= t_null_speed & acc < 0 &
                        acc * 19 * (19+1) / 2 + speed * 19 + progress >=  5 * cell_progress )
                : 19;
                (20 < t_max_speed & acc > 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  5 * cell_progress ) |
                (20 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (20-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (20 <= t_null_speed & acc < 0 &
                        acc * 20 * (20+1) / 2 + speed * 20 + progress >=  5 * cell_progress )
                : 20;
                (21 < t_max_speed & acc > 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  5 * cell_progress ) |
                (21 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (21-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (21 <= t_null_speed & acc < 0 &
                        acc * 21 * (21+1) / 2 + speed * 21 + progress >=  5 * cell_progress )
                : 21;
                (22 < t_max_speed & acc > 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  5 * cell_progress ) |
                (22 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (22-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (22 <= t_null_speed & acc < 0 &
                        acc * 22 * (22+1) / 2 + speed * 22 + progress >=  5 * cell_progress )
                : 22;
                (23 < t_max_speed & acc > 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  5 * cell_progress ) |
                (23 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (23-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (23 <= t_null_speed & acc < 0 &
                        acc * 23 * (23+1) / 2 + speed * 23 + progress >=  5 * cell_progress )
                : 23;
                (24 < t_max_speed & acc > 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  5 * cell_progress ) |
                (24 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (24-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (24 <= t_null_speed & acc < 0 &
                        acc * 24 * (24+1) / 2 + speed * 24 + progress >=  5 * cell_progress )
                : 24;
                (25 < t_max_speed & acc > 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  5 * cell_progress ) |
                (25 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (25-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (25 <= t_null_speed & acc < 0 &
                        acc * 25 * (25+1) / 2 + speed * 25 + progress >=  5 * cell_progress )
                : 25;
                (26 < t_max_speed & acc > 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  5 * cell_progress ) |
                (26 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (26-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (26 <= t_null_speed & acc < 0 &
                        acc * 26 * (26+1) / 2 + speed * 26 + progress >=  5 * cell_progress )
                : 26;
                (27 < t_max_speed & acc > 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  5 * cell_progress ) |
                (27 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (27-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (27 <= t_null_speed & acc < 0 &
                        acc * 27 * (27+1) / 2 + speed * 27 + progress >=  5 * cell_progress )
                : 27;
                (28 < t_max_speed & acc > 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  5 * cell_progress ) |
                (28 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (28-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (28 <= t_null_speed & acc < 0 &
                        acc * 28 * (28+1) / 2 + speed * 28 + progress >=  5 * cell_progress )
                : 28;
                (29 < t_max_speed & acc > 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  5 * cell_progress ) |
                (29 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (29-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (29 <= t_null_speed & acc < 0 &
                        acc * 29 * (29+1) / 2 + speed * 29 + progress >=  5 * cell_progress )
                : 29;
                (30 < t_max_speed & acc > 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  5 * cell_progress ) |
                (30 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (30-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (30 <= t_null_speed & acc < 0 &
                        acc * 30 * (30+1) / 2 + speed * 30 + progress >=  5 * cell_progress )
                : 30;
                (31 < t_max_speed & acc > 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  5 * cell_progress ) |
                (31 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (31-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (31 <= t_null_speed & acc < 0 &
                        acc * 31 * (31+1) / 2 + speed * 31 + progress >=  5 * cell_progress )
                : 31;
                (32 < t_max_speed & acc > 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  5 * cell_progress ) |
                (32 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (32-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (32 <= t_null_speed & acc < 0 &
                        acc * 32 * (32+1) / 2 + speed * 32 + progress >=  5 * cell_progress )
                : 32;
                (33 < t_max_speed & acc > 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  5 * cell_progress ) |
                (33 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (33-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (33 <= t_null_speed & acc < 0 &
                        acc * 33 * (33+1) / 2 + speed * 33 + progress >=  5 * cell_progress )
                : 33;
                (34 < t_max_speed & acc > 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  5 * cell_progress ) |
                (34 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (34-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (34 <= t_null_speed & acc < 0 &
                        acc * 34 * (34+1) / 2 + speed * 34 + progress >=  5 * cell_progress )
                : 34;
                (35 < t_max_speed & acc > 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  5 * cell_progress ) |
                (35 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (35-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (35 <= t_null_speed & acc < 0 &
                        acc * 35 * (35+1) / 2 + speed * 35 + progress >=  5 * cell_progress )
                : 35;
                (36 < t_max_speed & acc > 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  5 * cell_progress ) |
                (36 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (36-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (36 <= t_null_speed & acc < 0 &
                        acc * 36 * (36+1) / 2 + speed * 36 + progress >=  5 * cell_progress )
                : 36;
                (37 < t_max_speed & acc > 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  5 * cell_progress ) |
                (37 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (37-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (37 <= t_null_speed & acc < 0 &
                        acc * 37 * (37+1) / 2 + speed * 37 + progress >=  5 * cell_progress )
                : 37;
                (38 < t_max_speed & acc > 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  5 * cell_progress ) |
                (38 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (38-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (38 <= t_null_speed & acc < 0 &
                        acc * 38 * (38+1) / 2 + speed * 38 + progress >=  5 * cell_progress )
                : 38;
                (39 < t_max_speed & acc > 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  5 * cell_progress ) |
                (39 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (39-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (39 <= t_null_speed & acc < 0 &
                        acc * 39 * (39+1) / 2 + speed * 39 + progress >=  5 * cell_progress )
                : 39;
                (40 < t_max_speed & acc > 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  5 * cell_progress ) |
                (40 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (40-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (40 <= t_null_speed & acc < 0 &
                        acc * 40 * (40+1) / 2 + speed * 40 + progress >=  5 * cell_progress )
                : 40;
                (41 < t_max_speed & acc > 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  5 * cell_progress ) |
                (41 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (41-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (41 <= t_null_speed & acc < 0 &
                        acc * 41 * (41+1) / 2 + speed * 41 + progress >=  5 * cell_progress )
                : 41;
                (42 < t_max_speed & acc > 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  5 * cell_progress ) |
                (42 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (42-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (42 <= t_null_speed & acc < 0 &
                        acc * 42 * (42+1) / 2 + speed * 42 + progress >=  5 * cell_progress )
                : 42;
                (43 < t_max_speed & acc > 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  5 * cell_progress ) |
                (43 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (43-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (43 <= t_null_speed & acc < 0 &
                        acc * 43 * (43+1) / 2 + speed * 43 + progress >=  5 * cell_progress )
                : 43;
                (44 < t_max_speed & acc > 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  5 * cell_progress ) |
                (44 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (44-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (44 <= t_null_speed & acc < 0 &
                        acc * 44 * (44+1) / 2 + speed * 44 + progress >=  5 * cell_progress )
                : 44;
                (45 < t_max_speed & acc > 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  5 * cell_progress ) |
                (45 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (45-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (45 <= t_null_speed & acc < 0 &
                        acc * 45 * (45+1) / 2 + speed * 45 + progress >=  5 * cell_progress )
                : 45;
                (46 < t_max_speed & acc > 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  5 * cell_progress ) |
                (46 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (46-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (46 <= t_null_speed & acc < 0 &
                        acc * 46 * (46+1) / 2 + speed * 46 + progress >=  5 * cell_progress )
                : 46;
                (47 < t_max_speed & acc > 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  5 * cell_progress ) |
                (47 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (47-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (47 <= t_null_speed & acc < 0 &
                        acc * 47 * (47+1) / 2 + speed * 47 + progress >=  5 * cell_progress )
                : 47;
                (48 < t_max_speed & acc > 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  5 * cell_progress ) |
                (48 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (48-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (48 <= t_null_speed & acc < 0 &
                        acc * 48 * (48+1) / 2 + speed * 48 + progress >=  5 * cell_progress )
                : 48;
                (49 < t_max_speed & acc > 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  5 * cell_progress ) |
                (49 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (49-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (49 <= t_null_speed & acc < 0 &
                        acc * 49 * (49+1) / 2 + speed * 49 + progress >=  5 * cell_progress )
                : 49;
                (50 < t_max_speed & acc > 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  5 * cell_progress ) |
                (50 >= t_max_speed & acc > 0 &
                        acc * t_max_speed * (t_max_speed+1) / 2 + speed * t_max_speed + 
                        (50-t_max_speed) * max_speed + progress >=  5 * cell_progress) |
                (50 <= t_null_speed & acc < 0 &
                        acc * 50 * (50+1) / 2 + speed * 50 + progress >=  5 * cell_progress )
                : 50;
            TRUE : 50;
        esac;

    
        accelTimeAt_1 := case
            
                (0 < t_max_speed_acc &
                        acc_in * 0 * (0+1) / 2 + speed * 0 + progress >=  1 * cell_progress ) |
                (0 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (0-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 0;
                (1 < t_max_speed_acc &
                        acc_in * 1 * (1+1) / 2 + speed * 1 + progress >=  1 * cell_progress ) |
                (1 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (1-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 1;
                (2 < t_max_speed_acc &
                        acc_in * 2 * (2+1) / 2 + speed * 2 + progress >=  1 * cell_progress ) |
                (2 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (2-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 2;
                (3 < t_max_speed_acc &
                        acc_in * 3 * (3+1) / 2 + speed * 3 + progress >=  1 * cell_progress ) |
                (3 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (3-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 3;
                (4 < t_max_speed_acc &
                        acc_in * 4 * (4+1) / 2 + speed * 4 + progress >=  1 * cell_progress ) |
                (4 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (4-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 4;
                (5 < t_max_speed_acc &
                        acc_in * 5 * (5+1) / 2 + speed * 5 + progress >=  1 * cell_progress ) |
                (5 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (5-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 5;
                (6 < t_max_speed_acc &
                        acc_in * 6 * (6+1) / 2 + speed * 6 + progress >=  1 * cell_progress ) |
                (6 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (6-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 6;
                (7 < t_max_speed_acc &
                        acc_in * 7 * (7+1) / 2 + speed * 7 + progress >=  1 * cell_progress ) |
                (7 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (7-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 7;
                (8 < t_max_speed_acc &
                        acc_in * 8 * (8+1) / 2 + speed * 8 + progress >=  1 * cell_progress ) |
                (8 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (8-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 8;
                (9 < t_max_speed_acc &
                        acc_in * 9 * (9+1) / 2 + speed * 9 + progress >=  1 * cell_progress ) |
                (9 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (9-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 9;
                (10 < t_max_speed_acc &
                        acc_in * 10 * (10+1) / 2 + speed * 10 + progress >=  1 * cell_progress ) |
                (10 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (10-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 10;
                (11 < t_max_speed_acc &
                        acc_in * 11 * (11+1) / 2 + speed * 11 + progress >=  1 * cell_progress ) |
                (11 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (11-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 11;
                (12 < t_max_speed_acc &
                        acc_in * 12 * (12+1) / 2 + speed * 12 + progress >=  1 * cell_progress ) |
                (12 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (12-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 12;
                (13 < t_max_speed_acc &
                        acc_in * 13 * (13+1) / 2 + speed * 13 + progress >=  1 * cell_progress ) |
                (13 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (13-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 13;
                (14 < t_max_speed_acc &
                        acc_in * 14 * (14+1) / 2 + speed * 14 + progress >=  1 * cell_progress ) |
                (14 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (14-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 14;
                (15 < t_max_speed_acc &
                        acc_in * 15 * (15+1) / 2 + speed * 15 + progress >=  1 * cell_progress ) |
                (15 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (15-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 15;
                (16 < t_max_speed_acc &
                        acc_in * 16 * (16+1) / 2 + speed * 16 + progress >=  1 * cell_progress ) |
                (16 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (16-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 16;
                (17 < t_max_speed_acc &
                        acc_in * 17 * (17+1) / 2 + speed * 17 + progress >=  1 * cell_progress ) |
                (17 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (17-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 17;
                (18 < t_max_speed_acc &
                        acc_in * 18 * (18+1) / 2 + speed * 18 + progress >=  1 * cell_progress ) |
                (18 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (18-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 18;
                (19 < t_max_speed_acc &
                        acc_in * 19 * (19+1) / 2 + speed * 19 + progress >=  1 * cell_progress ) |
                (19 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (19-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 19;
                (20 < t_max_speed_acc &
                        acc_in * 20 * (20+1) / 2 + speed * 20 + progress >=  1 * cell_progress ) |
                (20 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (20-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 20;
                (21 < t_max_speed_acc &
                        acc_in * 21 * (21+1) / 2 + speed * 21 + progress >=  1 * cell_progress ) |
                (21 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (21-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 21;
                (22 < t_max_speed_acc &
                        acc_in * 22 * (22+1) / 2 + speed * 22 + progress >=  1 * cell_progress ) |
                (22 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (22-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 22;
                (23 < t_max_speed_acc &
                        acc_in * 23 * (23+1) / 2 + speed * 23 + progress >=  1 * cell_progress ) |
                (23 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (23-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 23;
                (24 < t_max_speed_acc &
                        acc_in * 24 * (24+1) / 2 + speed * 24 + progress >=  1 * cell_progress ) |
                (24 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (24-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 24;
                (25 < t_max_speed_acc &
                        acc_in * 25 * (25+1) / 2 + speed * 25 + progress >=  1 * cell_progress ) |
                (25 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (25-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 25;
                (26 < t_max_speed_acc &
                        acc_in * 26 * (26+1) / 2 + speed * 26 + progress >=  1 * cell_progress ) |
                (26 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (26-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 26;
                (27 < t_max_speed_acc &
                        acc_in * 27 * (27+1) / 2 + speed * 27 + progress >=  1 * cell_progress ) |
                (27 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (27-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 27;
                (28 < t_max_speed_acc &
                        acc_in * 28 * (28+1) / 2 + speed * 28 + progress >=  1 * cell_progress ) |
                (28 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (28-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 28;
                (29 < t_max_speed_acc &
                        acc_in * 29 * (29+1) / 2 + speed * 29 + progress >=  1 * cell_progress ) |
                (29 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (29-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 29;
                (30 < t_max_speed_acc &
                        acc_in * 30 * (30+1) / 2 + speed * 30 + progress >=  1 * cell_progress ) |
                (30 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (30-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 30;
                (31 < t_max_speed_acc &
                        acc_in * 31 * (31+1) / 2 + speed * 31 + progress >=  1 * cell_progress ) |
                (31 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (31-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 31;
                (32 < t_max_speed_acc &
                        acc_in * 32 * (32+1) / 2 + speed * 32 + progress >=  1 * cell_progress ) |
                (32 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (32-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 32;
                (33 < t_max_speed_acc &
                        acc_in * 33 * (33+1) / 2 + speed * 33 + progress >=  1 * cell_progress ) |
                (33 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (33-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 33;
                (34 < t_max_speed_acc &
                        acc_in * 34 * (34+1) / 2 + speed * 34 + progress >=  1 * cell_progress ) |
                (34 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (34-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 34;
                (35 < t_max_speed_acc &
                        acc_in * 35 * (35+1) / 2 + speed * 35 + progress >=  1 * cell_progress ) |
                (35 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (35-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 35;
                (36 < t_max_speed_acc &
                        acc_in * 36 * (36+1) / 2 + speed * 36 + progress >=  1 * cell_progress ) |
                (36 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (36-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 36;
                (37 < t_max_speed_acc &
                        acc_in * 37 * (37+1) / 2 + speed * 37 + progress >=  1 * cell_progress ) |
                (37 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (37-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 37;
                (38 < t_max_speed_acc &
                        acc_in * 38 * (38+1) / 2 + speed * 38 + progress >=  1 * cell_progress ) |
                (38 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (38-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 38;
                (39 < t_max_speed_acc &
                        acc_in * 39 * (39+1) / 2 + speed * 39 + progress >=  1 * cell_progress ) |
                (39 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (39-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 39;
                (40 < t_max_speed_acc &
                        acc_in * 40 * (40+1) / 2 + speed * 40 + progress >=  1 * cell_progress ) |
                (40 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (40-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 40;
                (41 < t_max_speed_acc &
                        acc_in * 41 * (41+1) / 2 + speed * 41 + progress >=  1 * cell_progress ) |
                (41 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (41-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 41;
                (42 < t_max_speed_acc &
                        acc_in * 42 * (42+1) / 2 + speed * 42 + progress >=  1 * cell_progress ) |
                (42 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (42-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 42;
                (43 < t_max_speed_acc &
                        acc_in * 43 * (43+1) / 2 + speed * 43 + progress >=  1 * cell_progress ) |
                (43 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (43-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 43;
                (44 < t_max_speed_acc &
                        acc_in * 44 * (44+1) / 2 + speed * 44 + progress >=  1 * cell_progress ) |
                (44 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (44-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 44;
                (45 < t_max_speed_acc &
                        acc_in * 45 * (45+1) / 2 + speed * 45 + progress >=  1 * cell_progress ) |
                (45 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (45-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 45;
                (46 < t_max_speed_acc &
                        acc_in * 46 * (46+1) / 2 + speed * 46 + progress >=  1 * cell_progress ) |
                (46 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (46-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 46;
                (47 < t_max_speed_acc &
                        acc_in * 47 * (47+1) / 2 + speed * 47 + progress >=  1 * cell_progress ) |
                (47 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (47-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 47;
                (48 < t_max_speed_acc &
                        acc_in * 48 * (48+1) / 2 + speed * 48 + progress >=  1 * cell_progress ) |
                (48 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (48-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 48;
                (49 < t_max_speed_acc &
                        acc_in * 49 * (49+1) / 2 + speed * 49 + progress >=  1 * cell_progress ) |
                (49 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (49-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 49;
                (50 < t_max_speed_acc &
                        acc_in * 50 * (50+1) / 2 + speed * 50 + progress >=  1 * cell_progress ) |
                (50 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (50-t_max_speed_acc) * max_speed + progress >=  1 * cell_progress)
                : 50;
            TRUE : 50;
        esac;
        accelTimeAt_2 := case
            
                (0 < t_max_speed_acc &
                        acc_in * 0 * (0+1) / 2 + speed * 0 + progress >=  2 * cell_progress ) |
                (0 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (0-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 0;
                (1 < t_max_speed_acc &
                        acc_in * 1 * (1+1) / 2 + speed * 1 + progress >=  2 * cell_progress ) |
                (1 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (1-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 1;
                (2 < t_max_speed_acc &
                        acc_in * 2 * (2+1) / 2 + speed * 2 + progress >=  2 * cell_progress ) |
                (2 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (2-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 2;
                (3 < t_max_speed_acc &
                        acc_in * 3 * (3+1) / 2 + speed * 3 + progress >=  2 * cell_progress ) |
                (3 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (3-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 3;
                (4 < t_max_speed_acc &
                        acc_in * 4 * (4+1) / 2 + speed * 4 + progress >=  2 * cell_progress ) |
                (4 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (4-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 4;
                (5 < t_max_speed_acc &
                        acc_in * 5 * (5+1) / 2 + speed * 5 + progress >=  2 * cell_progress ) |
                (5 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (5-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 5;
                (6 < t_max_speed_acc &
                        acc_in * 6 * (6+1) / 2 + speed * 6 + progress >=  2 * cell_progress ) |
                (6 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (6-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 6;
                (7 < t_max_speed_acc &
                        acc_in * 7 * (7+1) / 2 + speed * 7 + progress >=  2 * cell_progress ) |
                (7 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (7-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 7;
                (8 < t_max_speed_acc &
                        acc_in * 8 * (8+1) / 2 + speed * 8 + progress >=  2 * cell_progress ) |
                (8 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (8-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 8;
                (9 < t_max_speed_acc &
                        acc_in * 9 * (9+1) / 2 + speed * 9 + progress >=  2 * cell_progress ) |
                (9 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (9-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 9;
                (10 < t_max_speed_acc &
                        acc_in * 10 * (10+1) / 2 + speed * 10 + progress >=  2 * cell_progress ) |
                (10 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (10-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 10;
                (11 < t_max_speed_acc &
                        acc_in * 11 * (11+1) / 2 + speed * 11 + progress >=  2 * cell_progress ) |
                (11 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (11-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 11;
                (12 < t_max_speed_acc &
                        acc_in * 12 * (12+1) / 2 + speed * 12 + progress >=  2 * cell_progress ) |
                (12 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (12-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 12;
                (13 < t_max_speed_acc &
                        acc_in * 13 * (13+1) / 2 + speed * 13 + progress >=  2 * cell_progress ) |
                (13 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (13-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 13;
                (14 < t_max_speed_acc &
                        acc_in * 14 * (14+1) / 2 + speed * 14 + progress >=  2 * cell_progress ) |
                (14 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (14-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 14;
                (15 < t_max_speed_acc &
                        acc_in * 15 * (15+1) / 2 + speed * 15 + progress >=  2 * cell_progress ) |
                (15 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (15-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 15;
                (16 < t_max_speed_acc &
                        acc_in * 16 * (16+1) / 2 + speed * 16 + progress >=  2 * cell_progress ) |
                (16 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (16-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 16;
                (17 < t_max_speed_acc &
                        acc_in * 17 * (17+1) / 2 + speed * 17 + progress >=  2 * cell_progress ) |
                (17 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (17-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 17;
                (18 < t_max_speed_acc &
                        acc_in * 18 * (18+1) / 2 + speed * 18 + progress >=  2 * cell_progress ) |
                (18 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (18-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 18;
                (19 < t_max_speed_acc &
                        acc_in * 19 * (19+1) / 2 + speed * 19 + progress >=  2 * cell_progress ) |
                (19 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (19-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 19;
                (20 < t_max_speed_acc &
                        acc_in * 20 * (20+1) / 2 + speed * 20 + progress >=  2 * cell_progress ) |
                (20 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (20-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 20;
                (21 < t_max_speed_acc &
                        acc_in * 21 * (21+1) / 2 + speed * 21 + progress >=  2 * cell_progress ) |
                (21 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (21-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 21;
                (22 < t_max_speed_acc &
                        acc_in * 22 * (22+1) / 2 + speed * 22 + progress >=  2 * cell_progress ) |
                (22 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (22-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 22;
                (23 < t_max_speed_acc &
                        acc_in * 23 * (23+1) / 2 + speed * 23 + progress >=  2 * cell_progress ) |
                (23 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (23-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 23;
                (24 < t_max_speed_acc &
                        acc_in * 24 * (24+1) / 2 + speed * 24 + progress >=  2 * cell_progress ) |
                (24 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (24-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 24;
                (25 < t_max_speed_acc &
                        acc_in * 25 * (25+1) / 2 + speed * 25 + progress >=  2 * cell_progress ) |
                (25 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (25-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 25;
                (26 < t_max_speed_acc &
                        acc_in * 26 * (26+1) / 2 + speed * 26 + progress >=  2 * cell_progress ) |
                (26 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (26-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 26;
                (27 < t_max_speed_acc &
                        acc_in * 27 * (27+1) / 2 + speed * 27 + progress >=  2 * cell_progress ) |
                (27 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (27-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 27;
                (28 < t_max_speed_acc &
                        acc_in * 28 * (28+1) / 2 + speed * 28 + progress >=  2 * cell_progress ) |
                (28 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (28-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 28;
                (29 < t_max_speed_acc &
                        acc_in * 29 * (29+1) / 2 + speed * 29 + progress >=  2 * cell_progress ) |
                (29 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (29-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 29;
                (30 < t_max_speed_acc &
                        acc_in * 30 * (30+1) / 2 + speed * 30 + progress >=  2 * cell_progress ) |
                (30 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (30-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 30;
                (31 < t_max_speed_acc &
                        acc_in * 31 * (31+1) / 2 + speed * 31 + progress >=  2 * cell_progress ) |
                (31 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (31-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 31;
                (32 < t_max_speed_acc &
                        acc_in * 32 * (32+1) / 2 + speed * 32 + progress >=  2 * cell_progress ) |
                (32 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (32-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 32;
                (33 < t_max_speed_acc &
                        acc_in * 33 * (33+1) / 2 + speed * 33 + progress >=  2 * cell_progress ) |
                (33 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (33-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 33;
                (34 < t_max_speed_acc &
                        acc_in * 34 * (34+1) / 2 + speed * 34 + progress >=  2 * cell_progress ) |
                (34 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (34-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 34;
                (35 < t_max_speed_acc &
                        acc_in * 35 * (35+1) / 2 + speed * 35 + progress >=  2 * cell_progress ) |
                (35 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (35-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 35;
                (36 < t_max_speed_acc &
                        acc_in * 36 * (36+1) / 2 + speed * 36 + progress >=  2 * cell_progress ) |
                (36 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (36-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 36;
                (37 < t_max_speed_acc &
                        acc_in * 37 * (37+1) / 2 + speed * 37 + progress >=  2 * cell_progress ) |
                (37 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (37-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 37;
                (38 < t_max_speed_acc &
                        acc_in * 38 * (38+1) / 2 + speed * 38 + progress >=  2 * cell_progress ) |
                (38 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (38-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 38;
                (39 < t_max_speed_acc &
                        acc_in * 39 * (39+1) / 2 + speed * 39 + progress >=  2 * cell_progress ) |
                (39 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (39-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 39;
                (40 < t_max_speed_acc &
                        acc_in * 40 * (40+1) / 2 + speed * 40 + progress >=  2 * cell_progress ) |
                (40 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (40-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 40;
                (41 < t_max_speed_acc &
                        acc_in * 41 * (41+1) / 2 + speed * 41 + progress >=  2 * cell_progress ) |
                (41 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (41-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 41;
                (42 < t_max_speed_acc &
                        acc_in * 42 * (42+1) / 2 + speed * 42 + progress >=  2 * cell_progress ) |
                (42 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (42-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 42;
                (43 < t_max_speed_acc &
                        acc_in * 43 * (43+1) / 2 + speed * 43 + progress >=  2 * cell_progress ) |
                (43 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (43-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 43;
                (44 < t_max_speed_acc &
                        acc_in * 44 * (44+1) / 2 + speed * 44 + progress >=  2 * cell_progress ) |
                (44 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (44-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 44;
                (45 < t_max_speed_acc &
                        acc_in * 45 * (45+1) / 2 + speed * 45 + progress >=  2 * cell_progress ) |
                (45 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (45-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 45;
                (46 < t_max_speed_acc &
                        acc_in * 46 * (46+1) / 2 + speed * 46 + progress >=  2 * cell_progress ) |
                (46 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (46-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 46;
                (47 < t_max_speed_acc &
                        acc_in * 47 * (47+1) / 2 + speed * 47 + progress >=  2 * cell_progress ) |
                (47 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (47-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 47;
                (48 < t_max_speed_acc &
                        acc_in * 48 * (48+1) / 2 + speed * 48 + progress >=  2 * cell_progress ) |
                (48 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (48-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 48;
                (49 < t_max_speed_acc &
                        acc_in * 49 * (49+1) / 2 + speed * 49 + progress >=  2 * cell_progress ) |
                (49 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (49-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 49;
                (50 < t_max_speed_acc &
                        acc_in * 50 * (50+1) / 2 + speed * 50 + progress >=  2 * cell_progress ) |
                (50 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (50-t_max_speed_acc) * max_speed + progress >=  2 * cell_progress)
                : 50;
            TRUE : 50;
        esac;
        accelTimeAt_3 := case
            
                (0 < t_max_speed_acc &
                        acc_in * 0 * (0+1) / 2 + speed * 0 + progress >=  3 * cell_progress ) |
                (0 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (0-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 0;
                (1 < t_max_speed_acc &
                        acc_in * 1 * (1+1) / 2 + speed * 1 + progress >=  3 * cell_progress ) |
                (1 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (1-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 1;
                (2 < t_max_speed_acc &
                        acc_in * 2 * (2+1) / 2 + speed * 2 + progress >=  3 * cell_progress ) |
                (2 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (2-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 2;
                (3 < t_max_speed_acc &
                        acc_in * 3 * (3+1) / 2 + speed * 3 + progress >=  3 * cell_progress ) |
                (3 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (3-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 3;
                (4 < t_max_speed_acc &
                        acc_in * 4 * (4+1) / 2 + speed * 4 + progress >=  3 * cell_progress ) |
                (4 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (4-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 4;
                (5 < t_max_speed_acc &
                        acc_in * 5 * (5+1) / 2 + speed * 5 + progress >=  3 * cell_progress ) |
                (5 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (5-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 5;
                (6 < t_max_speed_acc &
                        acc_in * 6 * (6+1) / 2 + speed * 6 + progress >=  3 * cell_progress ) |
                (6 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (6-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 6;
                (7 < t_max_speed_acc &
                        acc_in * 7 * (7+1) / 2 + speed * 7 + progress >=  3 * cell_progress ) |
                (7 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (7-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 7;
                (8 < t_max_speed_acc &
                        acc_in * 8 * (8+1) / 2 + speed * 8 + progress >=  3 * cell_progress ) |
                (8 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (8-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 8;
                (9 < t_max_speed_acc &
                        acc_in * 9 * (9+1) / 2 + speed * 9 + progress >=  3 * cell_progress ) |
                (9 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (9-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 9;
                (10 < t_max_speed_acc &
                        acc_in * 10 * (10+1) / 2 + speed * 10 + progress >=  3 * cell_progress ) |
                (10 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (10-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 10;
                (11 < t_max_speed_acc &
                        acc_in * 11 * (11+1) / 2 + speed * 11 + progress >=  3 * cell_progress ) |
                (11 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (11-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 11;
                (12 < t_max_speed_acc &
                        acc_in * 12 * (12+1) / 2 + speed * 12 + progress >=  3 * cell_progress ) |
                (12 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (12-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 12;
                (13 < t_max_speed_acc &
                        acc_in * 13 * (13+1) / 2 + speed * 13 + progress >=  3 * cell_progress ) |
                (13 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (13-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 13;
                (14 < t_max_speed_acc &
                        acc_in * 14 * (14+1) / 2 + speed * 14 + progress >=  3 * cell_progress ) |
                (14 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (14-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 14;
                (15 < t_max_speed_acc &
                        acc_in * 15 * (15+1) / 2 + speed * 15 + progress >=  3 * cell_progress ) |
                (15 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (15-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 15;
                (16 < t_max_speed_acc &
                        acc_in * 16 * (16+1) / 2 + speed * 16 + progress >=  3 * cell_progress ) |
                (16 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (16-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 16;
                (17 < t_max_speed_acc &
                        acc_in * 17 * (17+1) / 2 + speed * 17 + progress >=  3 * cell_progress ) |
                (17 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (17-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 17;
                (18 < t_max_speed_acc &
                        acc_in * 18 * (18+1) / 2 + speed * 18 + progress >=  3 * cell_progress ) |
                (18 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (18-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 18;
                (19 < t_max_speed_acc &
                        acc_in * 19 * (19+1) / 2 + speed * 19 + progress >=  3 * cell_progress ) |
                (19 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (19-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 19;
                (20 < t_max_speed_acc &
                        acc_in * 20 * (20+1) / 2 + speed * 20 + progress >=  3 * cell_progress ) |
                (20 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (20-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 20;
                (21 < t_max_speed_acc &
                        acc_in * 21 * (21+1) / 2 + speed * 21 + progress >=  3 * cell_progress ) |
                (21 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (21-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 21;
                (22 < t_max_speed_acc &
                        acc_in * 22 * (22+1) / 2 + speed * 22 + progress >=  3 * cell_progress ) |
                (22 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (22-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 22;
                (23 < t_max_speed_acc &
                        acc_in * 23 * (23+1) / 2 + speed * 23 + progress >=  3 * cell_progress ) |
                (23 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (23-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 23;
                (24 < t_max_speed_acc &
                        acc_in * 24 * (24+1) / 2 + speed * 24 + progress >=  3 * cell_progress ) |
                (24 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (24-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 24;
                (25 < t_max_speed_acc &
                        acc_in * 25 * (25+1) / 2 + speed * 25 + progress >=  3 * cell_progress ) |
                (25 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (25-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 25;
                (26 < t_max_speed_acc &
                        acc_in * 26 * (26+1) / 2 + speed * 26 + progress >=  3 * cell_progress ) |
                (26 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (26-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 26;
                (27 < t_max_speed_acc &
                        acc_in * 27 * (27+1) / 2 + speed * 27 + progress >=  3 * cell_progress ) |
                (27 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (27-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 27;
                (28 < t_max_speed_acc &
                        acc_in * 28 * (28+1) / 2 + speed * 28 + progress >=  3 * cell_progress ) |
                (28 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (28-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 28;
                (29 < t_max_speed_acc &
                        acc_in * 29 * (29+1) / 2 + speed * 29 + progress >=  3 * cell_progress ) |
                (29 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (29-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 29;
                (30 < t_max_speed_acc &
                        acc_in * 30 * (30+1) / 2 + speed * 30 + progress >=  3 * cell_progress ) |
                (30 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (30-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 30;
                (31 < t_max_speed_acc &
                        acc_in * 31 * (31+1) / 2 + speed * 31 + progress >=  3 * cell_progress ) |
                (31 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (31-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 31;
                (32 < t_max_speed_acc &
                        acc_in * 32 * (32+1) / 2 + speed * 32 + progress >=  3 * cell_progress ) |
                (32 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (32-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 32;
                (33 < t_max_speed_acc &
                        acc_in * 33 * (33+1) / 2 + speed * 33 + progress >=  3 * cell_progress ) |
                (33 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (33-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 33;
                (34 < t_max_speed_acc &
                        acc_in * 34 * (34+1) / 2 + speed * 34 + progress >=  3 * cell_progress ) |
                (34 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (34-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 34;
                (35 < t_max_speed_acc &
                        acc_in * 35 * (35+1) / 2 + speed * 35 + progress >=  3 * cell_progress ) |
                (35 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (35-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 35;
                (36 < t_max_speed_acc &
                        acc_in * 36 * (36+1) / 2 + speed * 36 + progress >=  3 * cell_progress ) |
                (36 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (36-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 36;
                (37 < t_max_speed_acc &
                        acc_in * 37 * (37+1) / 2 + speed * 37 + progress >=  3 * cell_progress ) |
                (37 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (37-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 37;
                (38 < t_max_speed_acc &
                        acc_in * 38 * (38+1) / 2 + speed * 38 + progress >=  3 * cell_progress ) |
                (38 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (38-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 38;
                (39 < t_max_speed_acc &
                        acc_in * 39 * (39+1) / 2 + speed * 39 + progress >=  3 * cell_progress ) |
                (39 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (39-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 39;
                (40 < t_max_speed_acc &
                        acc_in * 40 * (40+1) / 2 + speed * 40 + progress >=  3 * cell_progress ) |
                (40 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (40-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 40;
                (41 < t_max_speed_acc &
                        acc_in * 41 * (41+1) / 2 + speed * 41 + progress >=  3 * cell_progress ) |
                (41 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (41-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 41;
                (42 < t_max_speed_acc &
                        acc_in * 42 * (42+1) / 2 + speed * 42 + progress >=  3 * cell_progress ) |
                (42 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (42-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 42;
                (43 < t_max_speed_acc &
                        acc_in * 43 * (43+1) / 2 + speed * 43 + progress >=  3 * cell_progress ) |
                (43 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (43-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 43;
                (44 < t_max_speed_acc &
                        acc_in * 44 * (44+1) / 2 + speed * 44 + progress >=  3 * cell_progress ) |
                (44 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (44-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 44;
                (45 < t_max_speed_acc &
                        acc_in * 45 * (45+1) / 2 + speed * 45 + progress >=  3 * cell_progress ) |
                (45 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (45-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 45;
                (46 < t_max_speed_acc &
                        acc_in * 46 * (46+1) / 2 + speed * 46 + progress >=  3 * cell_progress ) |
                (46 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (46-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 46;
                (47 < t_max_speed_acc &
                        acc_in * 47 * (47+1) / 2 + speed * 47 + progress >=  3 * cell_progress ) |
                (47 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (47-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 47;
                (48 < t_max_speed_acc &
                        acc_in * 48 * (48+1) / 2 + speed * 48 + progress >=  3 * cell_progress ) |
                (48 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (48-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 48;
                (49 < t_max_speed_acc &
                        acc_in * 49 * (49+1) / 2 + speed * 49 + progress >=  3 * cell_progress ) |
                (49 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (49-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 49;
                (50 < t_max_speed_acc &
                        acc_in * 50 * (50+1) / 2 + speed * 50 + progress >=  3 * cell_progress ) |
                (50 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (50-t_max_speed_acc) * max_speed + progress >=  3 * cell_progress)
                : 50;
            TRUE : 50;
        esac;
        accelTimeAt_4 := case
            
                (0 < t_max_speed_acc &
                        acc_in * 0 * (0+1) / 2 + speed * 0 + progress >=  4 * cell_progress ) |
                (0 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (0-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 0;
                (1 < t_max_speed_acc &
                        acc_in * 1 * (1+1) / 2 + speed * 1 + progress >=  4 * cell_progress ) |
                (1 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (1-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 1;
                (2 < t_max_speed_acc &
                        acc_in * 2 * (2+1) / 2 + speed * 2 + progress >=  4 * cell_progress ) |
                (2 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (2-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 2;
                (3 < t_max_speed_acc &
                        acc_in * 3 * (3+1) / 2 + speed * 3 + progress >=  4 * cell_progress ) |
                (3 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (3-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 3;
                (4 < t_max_speed_acc &
                        acc_in * 4 * (4+1) / 2 + speed * 4 + progress >=  4 * cell_progress ) |
                (4 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (4-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 4;
                (5 < t_max_speed_acc &
                        acc_in * 5 * (5+1) / 2 + speed * 5 + progress >=  4 * cell_progress ) |
                (5 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (5-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 5;
                (6 < t_max_speed_acc &
                        acc_in * 6 * (6+1) / 2 + speed * 6 + progress >=  4 * cell_progress ) |
                (6 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (6-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 6;
                (7 < t_max_speed_acc &
                        acc_in * 7 * (7+1) / 2 + speed * 7 + progress >=  4 * cell_progress ) |
                (7 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (7-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 7;
                (8 < t_max_speed_acc &
                        acc_in * 8 * (8+1) / 2 + speed * 8 + progress >=  4 * cell_progress ) |
                (8 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (8-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 8;
                (9 < t_max_speed_acc &
                        acc_in * 9 * (9+1) / 2 + speed * 9 + progress >=  4 * cell_progress ) |
                (9 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (9-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 9;
                (10 < t_max_speed_acc &
                        acc_in * 10 * (10+1) / 2 + speed * 10 + progress >=  4 * cell_progress ) |
                (10 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (10-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 10;
                (11 < t_max_speed_acc &
                        acc_in * 11 * (11+1) / 2 + speed * 11 + progress >=  4 * cell_progress ) |
                (11 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (11-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 11;
                (12 < t_max_speed_acc &
                        acc_in * 12 * (12+1) / 2 + speed * 12 + progress >=  4 * cell_progress ) |
                (12 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (12-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 12;
                (13 < t_max_speed_acc &
                        acc_in * 13 * (13+1) / 2 + speed * 13 + progress >=  4 * cell_progress ) |
                (13 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (13-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 13;
                (14 < t_max_speed_acc &
                        acc_in * 14 * (14+1) / 2 + speed * 14 + progress >=  4 * cell_progress ) |
                (14 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (14-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 14;
                (15 < t_max_speed_acc &
                        acc_in * 15 * (15+1) / 2 + speed * 15 + progress >=  4 * cell_progress ) |
                (15 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (15-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 15;
                (16 < t_max_speed_acc &
                        acc_in * 16 * (16+1) / 2 + speed * 16 + progress >=  4 * cell_progress ) |
                (16 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (16-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 16;
                (17 < t_max_speed_acc &
                        acc_in * 17 * (17+1) / 2 + speed * 17 + progress >=  4 * cell_progress ) |
                (17 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (17-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 17;
                (18 < t_max_speed_acc &
                        acc_in * 18 * (18+1) / 2 + speed * 18 + progress >=  4 * cell_progress ) |
                (18 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (18-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 18;
                (19 < t_max_speed_acc &
                        acc_in * 19 * (19+1) / 2 + speed * 19 + progress >=  4 * cell_progress ) |
                (19 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (19-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 19;
                (20 < t_max_speed_acc &
                        acc_in * 20 * (20+1) / 2 + speed * 20 + progress >=  4 * cell_progress ) |
                (20 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (20-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 20;
                (21 < t_max_speed_acc &
                        acc_in * 21 * (21+1) / 2 + speed * 21 + progress >=  4 * cell_progress ) |
                (21 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (21-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 21;
                (22 < t_max_speed_acc &
                        acc_in * 22 * (22+1) / 2 + speed * 22 + progress >=  4 * cell_progress ) |
                (22 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (22-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 22;
                (23 < t_max_speed_acc &
                        acc_in * 23 * (23+1) / 2 + speed * 23 + progress >=  4 * cell_progress ) |
                (23 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (23-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 23;
                (24 < t_max_speed_acc &
                        acc_in * 24 * (24+1) / 2 + speed * 24 + progress >=  4 * cell_progress ) |
                (24 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (24-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 24;
                (25 < t_max_speed_acc &
                        acc_in * 25 * (25+1) / 2 + speed * 25 + progress >=  4 * cell_progress ) |
                (25 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (25-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 25;
                (26 < t_max_speed_acc &
                        acc_in * 26 * (26+1) / 2 + speed * 26 + progress >=  4 * cell_progress ) |
                (26 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (26-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 26;
                (27 < t_max_speed_acc &
                        acc_in * 27 * (27+1) / 2 + speed * 27 + progress >=  4 * cell_progress ) |
                (27 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (27-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 27;
                (28 < t_max_speed_acc &
                        acc_in * 28 * (28+1) / 2 + speed * 28 + progress >=  4 * cell_progress ) |
                (28 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (28-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 28;
                (29 < t_max_speed_acc &
                        acc_in * 29 * (29+1) / 2 + speed * 29 + progress >=  4 * cell_progress ) |
                (29 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (29-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 29;
                (30 < t_max_speed_acc &
                        acc_in * 30 * (30+1) / 2 + speed * 30 + progress >=  4 * cell_progress ) |
                (30 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (30-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 30;
                (31 < t_max_speed_acc &
                        acc_in * 31 * (31+1) / 2 + speed * 31 + progress >=  4 * cell_progress ) |
                (31 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (31-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 31;
                (32 < t_max_speed_acc &
                        acc_in * 32 * (32+1) / 2 + speed * 32 + progress >=  4 * cell_progress ) |
                (32 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (32-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 32;
                (33 < t_max_speed_acc &
                        acc_in * 33 * (33+1) / 2 + speed * 33 + progress >=  4 * cell_progress ) |
                (33 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (33-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 33;
                (34 < t_max_speed_acc &
                        acc_in * 34 * (34+1) / 2 + speed * 34 + progress >=  4 * cell_progress ) |
                (34 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (34-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 34;
                (35 < t_max_speed_acc &
                        acc_in * 35 * (35+1) / 2 + speed * 35 + progress >=  4 * cell_progress ) |
                (35 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (35-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 35;
                (36 < t_max_speed_acc &
                        acc_in * 36 * (36+1) / 2 + speed * 36 + progress >=  4 * cell_progress ) |
                (36 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (36-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 36;
                (37 < t_max_speed_acc &
                        acc_in * 37 * (37+1) / 2 + speed * 37 + progress >=  4 * cell_progress ) |
                (37 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (37-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 37;
                (38 < t_max_speed_acc &
                        acc_in * 38 * (38+1) / 2 + speed * 38 + progress >=  4 * cell_progress ) |
                (38 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (38-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 38;
                (39 < t_max_speed_acc &
                        acc_in * 39 * (39+1) / 2 + speed * 39 + progress >=  4 * cell_progress ) |
                (39 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (39-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 39;
                (40 < t_max_speed_acc &
                        acc_in * 40 * (40+1) / 2 + speed * 40 + progress >=  4 * cell_progress ) |
                (40 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (40-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 40;
                (41 < t_max_speed_acc &
                        acc_in * 41 * (41+1) / 2 + speed * 41 + progress >=  4 * cell_progress ) |
                (41 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (41-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 41;
                (42 < t_max_speed_acc &
                        acc_in * 42 * (42+1) / 2 + speed * 42 + progress >=  4 * cell_progress ) |
                (42 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (42-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 42;
                (43 < t_max_speed_acc &
                        acc_in * 43 * (43+1) / 2 + speed * 43 + progress >=  4 * cell_progress ) |
                (43 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (43-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 43;
                (44 < t_max_speed_acc &
                        acc_in * 44 * (44+1) / 2 + speed * 44 + progress >=  4 * cell_progress ) |
                (44 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (44-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 44;
                (45 < t_max_speed_acc &
                        acc_in * 45 * (45+1) / 2 + speed * 45 + progress >=  4 * cell_progress ) |
                (45 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (45-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 45;
                (46 < t_max_speed_acc &
                        acc_in * 46 * (46+1) / 2 + speed * 46 + progress >=  4 * cell_progress ) |
                (46 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (46-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 46;
                (47 < t_max_speed_acc &
                        acc_in * 47 * (47+1) / 2 + speed * 47 + progress >=  4 * cell_progress ) |
                (47 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (47-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 47;
                (48 < t_max_speed_acc &
                        acc_in * 48 * (48+1) / 2 + speed * 48 + progress >=  4 * cell_progress ) |
                (48 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (48-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 48;
                (49 < t_max_speed_acc &
                        acc_in * 49 * (49+1) / 2 + speed * 49 + progress >=  4 * cell_progress ) |
                (49 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (49-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 49;
                (50 < t_max_speed_acc &
                        acc_in * 50 * (50+1) / 2 + speed * 50 + progress >=  4 * cell_progress ) |
                (50 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (50-t_max_speed_acc) * max_speed + progress >=  4 * cell_progress)
                : 50;
            TRUE : 50;
        esac;
        accelTimeAt_5 := case
            
                (0 < t_max_speed_acc &
                        acc_in * 0 * (0+1) / 2 + speed * 0 + progress >=  5 * cell_progress ) |
                (0 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (0-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 0;
                (1 < t_max_speed_acc &
                        acc_in * 1 * (1+1) / 2 + speed * 1 + progress >=  5 * cell_progress ) |
                (1 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (1-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 1;
                (2 < t_max_speed_acc &
                        acc_in * 2 * (2+1) / 2 + speed * 2 + progress >=  5 * cell_progress ) |
                (2 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (2-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 2;
                (3 < t_max_speed_acc &
                        acc_in * 3 * (3+1) / 2 + speed * 3 + progress >=  5 * cell_progress ) |
                (3 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (3-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 3;
                (4 < t_max_speed_acc &
                        acc_in * 4 * (4+1) / 2 + speed * 4 + progress >=  5 * cell_progress ) |
                (4 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (4-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 4;
                (5 < t_max_speed_acc &
                        acc_in * 5 * (5+1) / 2 + speed * 5 + progress >=  5 * cell_progress ) |
                (5 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (5-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 5;
                (6 < t_max_speed_acc &
                        acc_in * 6 * (6+1) / 2 + speed * 6 + progress >=  5 * cell_progress ) |
                (6 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (6-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 6;
                (7 < t_max_speed_acc &
                        acc_in * 7 * (7+1) / 2 + speed * 7 + progress >=  5 * cell_progress ) |
                (7 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (7-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 7;
                (8 < t_max_speed_acc &
                        acc_in * 8 * (8+1) / 2 + speed * 8 + progress >=  5 * cell_progress ) |
                (8 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (8-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 8;
                (9 < t_max_speed_acc &
                        acc_in * 9 * (9+1) / 2 + speed * 9 + progress >=  5 * cell_progress ) |
                (9 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (9-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 9;
                (10 < t_max_speed_acc &
                        acc_in * 10 * (10+1) / 2 + speed * 10 + progress >=  5 * cell_progress ) |
                (10 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (10-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 10;
                (11 < t_max_speed_acc &
                        acc_in * 11 * (11+1) / 2 + speed * 11 + progress >=  5 * cell_progress ) |
                (11 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (11-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 11;
                (12 < t_max_speed_acc &
                        acc_in * 12 * (12+1) / 2 + speed * 12 + progress >=  5 * cell_progress ) |
                (12 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (12-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 12;
                (13 < t_max_speed_acc &
                        acc_in * 13 * (13+1) / 2 + speed * 13 + progress >=  5 * cell_progress ) |
                (13 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (13-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 13;
                (14 < t_max_speed_acc &
                        acc_in * 14 * (14+1) / 2 + speed * 14 + progress >=  5 * cell_progress ) |
                (14 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (14-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 14;
                (15 < t_max_speed_acc &
                        acc_in * 15 * (15+1) / 2 + speed * 15 + progress >=  5 * cell_progress ) |
                (15 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (15-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 15;
                (16 < t_max_speed_acc &
                        acc_in * 16 * (16+1) / 2 + speed * 16 + progress >=  5 * cell_progress ) |
                (16 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (16-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 16;
                (17 < t_max_speed_acc &
                        acc_in * 17 * (17+1) / 2 + speed * 17 + progress >=  5 * cell_progress ) |
                (17 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (17-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 17;
                (18 < t_max_speed_acc &
                        acc_in * 18 * (18+1) / 2 + speed * 18 + progress >=  5 * cell_progress ) |
                (18 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (18-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 18;
                (19 < t_max_speed_acc &
                        acc_in * 19 * (19+1) / 2 + speed * 19 + progress >=  5 * cell_progress ) |
                (19 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (19-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 19;
                (20 < t_max_speed_acc &
                        acc_in * 20 * (20+1) / 2 + speed * 20 + progress >=  5 * cell_progress ) |
                (20 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (20-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 20;
                (21 < t_max_speed_acc &
                        acc_in * 21 * (21+1) / 2 + speed * 21 + progress >=  5 * cell_progress ) |
                (21 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (21-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 21;
                (22 < t_max_speed_acc &
                        acc_in * 22 * (22+1) / 2 + speed * 22 + progress >=  5 * cell_progress ) |
                (22 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (22-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 22;
                (23 < t_max_speed_acc &
                        acc_in * 23 * (23+1) / 2 + speed * 23 + progress >=  5 * cell_progress ) |
                (23 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (23-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 23;
                (24 < t_max_speed_acc &
                        acc_in * 24 * (24+1) / 2 + speed * 24 + progress >=  5 * cell_progress ) |
                (24 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (24-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 24;
                (25 < t_max_speed_acc &
                        acc_in * 25 * (25+1) / 2 + speed * 25 + progress >=  5 * cell_progress ) |
                (25 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (25-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 25;
                (26 < t_max_speed_acc &
                        acc_in * 26 * (26+1) / 2 + speed * 26 + progress >=  5 * cell_progress ) |
                (26 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (26-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 26;
                (27 < t_max_speed_acc &
                        acc_in * 27 * (27+1) / 2 + speed * 27 + progress >=  5 * cell_progress ) |
                (27 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (27-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 27;
                (28 < t_max_speed_acc &
                        acc_in * 28 * (28+1) / 2 + speed * 28 + progress >=  5 * cell_progress ) |
                (28 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (28-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 28;
                (29 < t_max_speed_acc &
                        acc_in * 29 * (29+1) / 2 + speed * 29 + progress >=  5 * cell_progress ) |
                (29 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (29-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 29;
                (30 < t_max_speed_acc &
                        acc_in * 30 * (30+1) / 2 + speed * 30 + progress >=  5 * cell_progress ) |
                (30 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (30-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 30;
                (31 < t_max_speed_acc &
                        acc_in * 31 * (31+1) / 2 + speed * 31 + progress >=  5 * cell_progress ) |
                (31 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (31-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 31;
                (32 < t_max_speed_acc &
                        acc_in * 32 * (32+1) / 2 + speed * 32 + progress >=  5 * cell_progress ) |
                (32 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (32-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 32;
                (33 < t_max_speed_acc &
                        acc_in * 33 * (33+1) / 2 + speed * 33 + progress >=  5 * cell_progress ) |
                (33 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (33-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 33;
                (34 < t_max_speed_acc &
                        acc_in * 34 * (34+1) / 2 + speed * 34 + progress >=  5 * cell_progress ) |
                (34 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (34-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 34;
                (35 < t_max_speed_acc &
                        acc_in * 35 * (35+1) / 2 + speed * 35 + progress >=  5 * cell_progress ) |
                (35 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (35-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 35;
                (36 < t_max_speed_acc &
                        acc_in * 36 * (36+1) / 2 + speed * 36 + progress >=  5 * cell_progress ) |
                (36 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (36-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 36;
                (37 < t_max_speed_acc &
                        acc_in * 37 * (37+1) / 2 + speed * 37 + progress >=  5 * cell_progress ) |
                (37 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (37-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 37;
                (38 < t_max_speed_acc &
                        acc_in * 38 * (38+1) / 2 + speed * 38 + progress >=  5 * cell_progress ) |
                (38 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (38-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 38;
                (39 < t_max_speed_acc &
                        acc_in * 39 * (39+1) / 2 + speed * 39 + progress >=  5 * cell_progress ) |
                (39 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (39-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 39;
                (40 < t_max_speed_acc &
                        acc_in * 40 * (40+1) / 2 + speed * 40 + progress >=  5 * cell_progress ) |
                (40 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (40-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 40;
                (41 < t_max_speed_acc &
                        acc_in * 41 * (41+1) / 2 + speed * 41 + progress >=  5 * cell_progress ) |
                (41 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (41-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 41;
                (42 < t_max_speed_acc &
                        acc_in * 42 * (42+1) / 2 + speed * 42 + progress >=  5 * cell_progress ) |
                (42 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (42-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 42;
                (43 < t_max_speed_acc &
                        acc_in * 43 * (43+1) / 2 + speed * 43 + progress >=  5 * cell_progress ) |
                (43 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (43-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 43;
                (44 < t_max_speed_acc &
                        acc_in * 44 * (44+1) / 2 + speed * 44 + progress >=  5 * cell_progress ) |
                (44 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (44-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 44;
                (45 < t_max_speed_acc &
                        acc_in * 45 * (45+1) / 2 + speed * 45 + progress >=  5 * cell_progress ) |
                (45 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (45-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 45;
                (46 < t_max_speed_acc &
                        acc_in * 46 * (46+1) / 2 + speed * 46 + progress >=  5 * cell_progress ) |
                (46 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (46-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 46;
                (47 < t_max_speed_acc &
                        acc_in * 47 * (47+1) / 2 + speed * 47 + progress >=  5 * cell_progress ) |
                (47 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (47-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 47;
                (48 < t_max_speed_acc &
                        acc_in * 48 * (48+1) / 2 + speed * 48 + progress >=  5 * cell_progress ) |
                (48 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (48-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 48;
                (49 < t_max_speed_acc &
                        acc_in * 49 * (49+1) / 2 + speed * 49 + progress >=  5 * cell_progress ) |
                (49 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (49-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 49;
                (50 < t_max_speed_acc &
                        acc_in * 50 * (50+1) / 2 + speed * 50 + progress >=  5 * cell_progress ) |
                (50 >= t_max_speed_acc &
                        acc_in * t_max_speed_acc * (t_max_speed_acc+1) / 2 + speed * t_max_speed_acc + 
                        (50-t_max_speed_acc) * max_speed + progress >=  5 * cell_progress)
                : 50;
            TRUE : 50;
        esac;


    APPROACHING := position <= 0;
    CROSSING := position > 0 & position < max_position;
    EXITING := position >= max_position;


    FROZENVAR
        id : 0..3;
        tcl : array 0..max_tcl_index of 0..max_position;
        
        from : 0..3; -- {TOP, BOTTOM, RIGHT, LEFT}
        to : 0..3; -- {TOP, BOTTOM, RIGHT, LEFT}
        priority : 0..50;

    VAR
        speed : 0..max_speed;
        progress : 0..max_progress;
        decision : array 0..(3) of { -1, 1 };

    ASSIGN


        init(id) := id_in;



       init(tcl[0]) := 0;
        init(tcl[1]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 4;
            from = 2 & to = 1 : 4;
            from = 2 & to = 3 : 4;
            from = 0 & to = 2 : 1;
            from = 0 & to = 3 : 1;
            from = 0 & to = 1 : 1;
            from = 1 & to = 3 : 2;
            from = 1 & to = 0 : 2;
            from = 1 & to = 2 : 2;
            from = 3 & to = 1 : 3;
            from = 3 & to = 2 : 3;
            from = 3 & to = 0 : 3;
        esac;
        init(tcl[2]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 2;
            from = 2 & to = 1 : 5;
            from = 2 & to = 3 : 2;
            from = 0 & to = 2 : 3;
            from = 0 & to = 3 : 5;
            from = 0 & to = 1 : 3;
            from = 1 & to = 3 : 1;
            from = 1 & to = 0 : 5;
            from = 1 & to = 2 : 1;
            from = 3 & to = 1 : 4;
            from = 3 & to = 2 : 5;
            from = 3 & to = 0 : 4;
        esac;
        init(tcl[3]) := case
            from = 2 & to = 2 : 0;
            from = 0 & to = 0 : 0;
            from = 1 & to = 1 : 0;
            from = 3 & to = 3 : 0;
            from = 2 & to = 0 : 5;
            from = 2 & to = 1 : 5;
            from = 2 & to = 3 : 1;
            from = 0 & to = 2 : 5;
            from = 0 & to = 3 : 5;
            from = 0 & to = 1 : 4;
            from = 1 & to = 3 : 5;
            from = 1 & to = 0 : 5;
            from = 1 & to = 2 : 3;
            from = 3 & to = 1 : 5;
            from = 3 & to = 2 : 5;
            from = 3 & to = 0 : 2;
        esac;
        init(tcl[4]) := 5;
    

        init(priority) := 50 - timeAt_1;



        init(from) := case
            id = 0 : 0;
            id = 1 : 1;
            id = 2 : 2;
            id = 3 : 3;
        esac;

        init(to) := case
            id = 0 : {1, 2, 3};
            id = 1 : {0, 2, 3};
            id = 2 : {0, 1, 3};
            id = 3 : {0, 1, 2};
        esac;

        init(speed) := {5,6,7,8};
        
        init(progress) := {0, cell_progress / 2};

        
        next(progress) := case
            progress + next_speed <= max_progress : progress + next_speed;
            progress + next_speed > max_progress : max_progress;
        esac;

        next(speed) := next_speed;

            
                init(decision[0]) := acc_in;
                init(decision[1]) := acc_in;
                init(decision[2]) := acc_in;
                init(decision[3]) := acc_in;

        next(decision[id_in]) := acc_in;
        
